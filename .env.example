# YMERA Enterprise Database Core - Environment Configuration
# Copy this file to .env and update with your values

# ============================================================================
# DATABASE CONNECTION
# ============================================================================

# PostgreSQL (Production - Recommended)
# DATABASE_URL=postgresql+asyncpg://username:password@localhost:5432/ymera_production

# MySQL (Alternative)
# DATABASE_URL=mysql+aiomysql://username:password@localhost:3306/ymera

# SQLite (Development/Testing)
DATABASE_URL=sqlite+aiosqlite:///./ymera_enterprise.db

# ============================================================================
# CONNECTION POOL SETTINGS
# ============================================================================

# Number of connections to maintain in the pool
DB_POOL_SIZE=20

# Maximum overflow connections beyond pool_size
DB_MAX_OVERFLOW=40

# Timeout for getting a connection from the pool (seconds)
DB_POOL_TIMEOUT=30

# Recycle connections after this many seconds (prevents stale connections)
DB_POOL_RECYCLE=3600

# ============================================================================
# LOGGING & DEBUGGING
# ============================================================================

# Echo SQL statements to console (true/false)
DB_ECHO=false

# Echo connection pool events (true/false)
DB_ECHO_POOL=false

# Application log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# ============================================================================
# MIGRATION SETTINGS
# ============================================================================

# Directory for migration files
DB_MIGRATIONS_DIR=./database/migrations

# Migration tracking table name
DB_MIGRATION_TABLE=schema_migrations

# ============================================================================
# MAINTENANCE SETTINGS
# ============================================================================

# Auto-optimize database on startup (true/false)
DB_AUTO_OPTIMIZE=false

# Auto-cleanup old data on startup (true/false)
DB_AUTO_CLEANUP=false

# Days to keep old data before cleanup
DB_CLEANUP_DAYS=90

# ============================================================================
# SECURITY SETTINGS (CRITICAL - MUST CHANGE IN PRODUCTION!)
# ============================================================================

# Secret key for encryption (REQUIRED - Generate with: python -c "import secrets; print(secrets.token_urlsafe(32))")
SECRET_KEY=CHANGE_ME_GENERATE_SECURE_32_PLUS_CHAR_SECRET

# JWT secret key (REQUIRED - Must be at least 32 characters)
# Generate with: python -c "import secrets; print(secrets.token_urlsafe(32))"
JWT_SECRET=CHANGE_ME_GENERATE_SECURE_32_PLUS_CHAR_SECRET

# JWT expiration time (seconds)
JWT_EXPIRATION=3600

# Password hashing algorithm
PASSWORD_HASH_ALGORITHM=bcrypt

# CORS Origins (comma-separated list of allowed origins)
# CRITICAL: Never use "*" in production!
CORS_ORIGINS=http://localhost:3000,http://localhost:8000

# ============================================================================
# API SETTINGS
# ============================================================================

# API host and port
API_HOST=0.0.0.0
API_PORT=8000

# CORS allowed origins (comma-separated)
CORS_ORIGINS=http://localhost:3000,http://localhost:8080

# API rate limiting
API_RATE_LIMIT=100

# ============================================================================
# MONITORING & HEALTH CHECKS
# ============================================================================

# Enable health check endpoint (true/false)
HEALTH_CHECK_ENABLED=true

# Health check interval (seconds)
HEALTH_CHECK_INTERVAL=60

# Enable metrics collection (true/false)
METRICS_ENABLED=true

# ============================================================================
# EXTERNAL SERVICES (Optional)
# ============================================================================

# Redis (for caching)
# REDIS_URL=redis://localhost:6379/0

# S3/File Storage
# S3_BUCKET=ymera-files
# S3_REGION=us-east-1
# S3_ACCESS_KEY=your-access-key
# S3_SECRET_KEY=your-secret-key

# Email Service
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USERNAME=your-email@example.com
# SMTP_PASSWORD=your-password

# ============================================================================
# FEATURE FLAGS
# ============================================================================

# Enable two-factor authentication
ENABLE_2FA=false

# Enable file virus scanning
ENABLE_VIRUS_SCAN=false

# Enable audit logging
ENABLE_AUDIT_LOG=true

# Enable soft deletes
ENABLE_SOFT_DELETE=true

# ============================================================================
# DEVELOPMENT SETTINGS
# ============================================================================

# Enable debug mode (true/false)
DEBUG=false

# Enable auto-reload on code changes (true/false)
AUTO_RELOAD=false

# Create sample data on startup (true/false)
CREATE_SAMPLE_DATA=false

# ============================================================================
# PRODUCTION SETTINGS
# ============================================================================

# Environment (development, staging, production)
ENVIRONMENT=development

# Sentry DSN for error tracking
# SENTRY_DSN=https://your-sentry-dsn

# New Relic license key
# NEW_RELIC_LICENSE_KEY=your-license-key
# YMERA Project Agent - Environment Configuration
# Copy this file to .env and fill in your values

# ============================================================================
# SERVER CONFIGURATION
# ============================================================================
PROJECT_AGENT_HOST=0.0.0.0
PROJECT_AGENT_PORT=8001
ENVIRONMENT=production  # development, staging, production
DEBUG=false
LOG_LEVEL=INFO  # DEBUG, INFO, WARNING, ERROR, CRITICAL

# ============================================================================
# DATABASE CONFIGURATION
# ============================================================================
DATABASE_URL=postgresql://project_agent:secure_password@localhost:5432/project_agent_db
DATABASE_POOL_SIZE=20
DATABASE_MAX_OVERFLOW=10
DATABASE_POOL_TIMEOUT=30
DATABASE_ECHO=false  # Set to true for SQL query logging

# ============================================================================
# REDIS CONFIGURATION
# ============================================================================
REDIS_URL=redis://localhost:6379/0
REDIS_PASSWORD=
REDIS_MAX_CONNECTIONS=50
REDIS_SOCKET_TIMEOUT=5
REDIS_SOCKET_CONNECT_TIMEOUT=5

# ============================================================================
# KAFKA CONFIGURATION (Optional - for async task processing)
# ============================================================================
KAFKA_BOOTSTRAP_SERVERS=localhost:9092
KAFKA_TOPIC_PREFIX=project_agent
KAFKA_CONSUMER_GROUP=project_agent_consumers
KAFKA_AUTO_COMMIT=true
KAFKA_ENABLE_IDEMPOTENCE=true

# ============================================================================
# SECURITY CONFIGURATION
# ============================================================================
# JWT Configuration (CRITICAL - Generate secure keys!)
JWT_SECRET_KEY=CHANGE_ME_TO_A_SECURE_256_BIT_SECRET_KEY_MINIMUM_32_CHARS
JWT_ALGORITHM=RS256  # RS256 (asymmetric) or HS256 (symmetric)
JWT_EXPIRE_MINUTES=60
JWT_REFRESH_EXPIRE_MINUTES=10080  # 7 days

# For RS256, provide paths to key files
JWT_PUBLIC_KEY_PATH=/secrets/jwt_public.pem
JWT_PRIVATE_KEY_PATH=/secrets/jwt_private.pem

# CORS Configuration
CORS_ORIGINS=["http://localhost:3000","https://yourdomain.com"]
CORS_ALLOW_CREDENTIALS=true

# Trusted Hosts
TRUSTED_HOSTS=["localhost","127.0.0.1","yourdomain.com"]

# Rate Limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_REQUESTS_PER_MINUTE=100
RATE_LIMIT_BURST=20

# ============================================================================
# QUALITY VERIFICATION CONFIGURATION
# ============================================================================
QUALITY_THRESHOLD=85.0  # Minimum score for acceptance (0-100)
CODE_COVERAGE_MIN=80.0  # Minimum test coverage percentage
SECURITY_SCAN_ENABLED=true
PERFORMANCE_BENCHMARK_ENABLED=true
DOCUMENTATION_CHECK_ENABLED=true

# Quality Weights (must sum to 1.0)
QUALITY_CODE_WEIGHT=0.35
QUALITY_SECURITY_WEIGHT=0.30
QUALITY_PERFORMANCE_WEIGHT=0.20
QUALITY_DOCUMENTATION_WEIGHT=0.15

# ============================================================================
# FILE STORAGE CONFIGURATION
# ============================================================================
STORAGE_BACKEND=local  # local, s3, azure, gcs
STORAGE_PATH=./uploads
MAX_UPLOAD_SIZE_MB=100

# AWS S3 Configuration (if STORAGE_BACKEND=s3)
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_REGION=us-east-1
S3_BUCKET=project-agent-files
S3_ENDPOINT_URL=  # Optional: for S3-compatible services

# Azure Blob Storage (if STORAGE_BACKEND=azure)
AZURE_STORAGE_CONNECTION_STRING=
AZURE_CONTAINER_NAME=project-agent-files

# Google Cloud Storage (if STORAGE_BACKEND=gcs)
GCS_PROJECT_ID=
GCS_BUCKET_NAME=project-agent-files
GCS_CREDENTIALS_PATH=/secrets/gcs-credentials.json

# File Versioning
FILE_VERSIONING_ENABLED=true
FILE_VERSION_RETENTION_DAYS=90

# ============================================================================
# AGENT REGISTRY - URLs for all agents in the platform
# ============================================================================
# Manager Agent (Priority 1 - Task delegation)
MANAGER_AGENT_URL=http://manager-agent:8000
MANAGER_AGENT_TIMEOUT=30

# Coding Agent (Priority 2 - Code generation)
CODING_AGENT_URL=http://coding-agent:8010
CODING_AGENT_TIMEOUT=60

# Enhancement Agent (Priority 3 - Code optimization)
ENHANCEMENT_AGENT_URL=http://enhancement-agent:8020
ENHANCEMENT_AGENT_TIMEOUT=60

# Examination Agent (Priority 4 - Testing & QA)
EXAMINATION_AGENT_URL=http://examination-agent:8030
EXAMINATION_AGENT_TIMEOUT=90

# Documentation Agent
DOCUMENTATION_AGENT_URL=http://documentation-agent:8040
DOCUMENTATION_AGENT_TIMEOUT=45

# Security Agent
SECURITY_AGENT_URL=http://security-agent:8050
SECURITY_AGENT_TIMEOUT=120

# Deployment Agent
DEPLOYMENT_AGENT_URL=http://deployment-agent:8060
DEPLOYMENT_AGENT_TIMEOUT=180

# Database Agent
DATABASE_AGENT_URL=http://database-agent:8070
DATABASE_AGENT_TIMEOUT=60

# API Agent
API_AGENT_URL=http://api-agent:8080
API_AGENT_TIMEOUT=60

# Frontend Agent
FRONTEND_AGENT_URL=http://frontend-agent:8090
FRONTEND_AGENT_TIMEOUT=60

# DevOps Agent
DEVOPS_AGENT_URL=http://devops-agent:8100
DEVOPS_AGENT_TIMEOUT=120

# Monitoring Agent
MONITORING_AGENT_URL=http://monitoring-agent:8110
MONITORING_AGENT_TIMEOUT=45

# ML Agent
ML_AGENT_URL=http://ml-agent:8120
ML_AGENT_TIMEOUT=300

# Data Agent
DATA_AGENT_URL=http://data-agent:8130
DATA_AGENT_TIMEOUT=180

# Analytics Agent
ANALYTICS_AGENT_URL=http://analytics-agent:8140
ANALYTICS_AGENT_TIMEOUT=90

# Integration Agent
INTEGRATION_AGENT_URL=http://integration-agent:8150
INTEGRATION_AGENT_TIMEOUT=120

# Compliance Agent
COMPLIANCE_AGENT_URL=http://compliance-agent:8160
COMPLIANCE_AGENT_TIMEOUT=90

# Performance Agent
PERFORMANCE_AGENT_URL=http://performance-agent:8170
PERFORMANCE_AGENT_TIMEOUT=180

# Architecture Agent
ARCHITECTURE_AGENT_URL=http://architecture-agent:8180
ARCHITECTURE_AGENT_TIMEOUT=60

# Review Agent
REVIEW_AGENT_URL=http://review-agent:8190
REVIEW_AGENT_TIMEOUT=120

# Agent Communication
AGENT_REQUEST_TIMEOUT=30  # Default timeout for agent requests
AGENT_MAX_RETRIES=3
AGENT_RETRY_BACKOFF=2  # Exponential backoff multiplier
AGENT_CIRCUIT_BREAKER_THRESHOLD=5  # Failures before circuit opens
AGENT_CIRCUIT_BREAKER_TIMEOUT=60  # Seconds before attempting reset

# ============================================================================
# CHAT INTERFACE CONFIGURATION
# ============================================================================
CHAT_ENABLED=true
CHAT_MAX_HISTORY=50  # Maximum messages to keep in context
CHAT_RESPONSE_TIMEOUT=30
CHAT_NLP_MODEL=sentence-transformers/all-MiniLM-L6-v2
CHAT_ENABLE_SUGGESTIONS=true

# ============================================================================
# MONITORING & OBSERVABILITY
# ============================================================================
# Prometheus
PROMETHEUS_ENABLED=true
PROMETHEUS_PORT=9090
PROMETHEUS_METRICS_PATH=/metrics

# Jaeger (Distributed Tracing)
JAEGER_ENABLED=true
JAEGER_AGENT_HOST=localhost
JAEGER_AGENT_PORT=6831
JAEGER_SAMPLER_TYPE=probabilistic
JAEGER_SAMPLER_PARAM=0.1  # 10% sampling

# Logging
LOG_FORMAT=json  # json or text
LOG_FILE=./logs/project_agent.log
LOG_MAX_SIZE_MB=100
LOG_BACKUP_COUNT=10

# ============================================================================
# INTEGRATION CONFIGURATION
# ============================================================================
# Git Integration
GIT_ENABLED=true
GIT_DEFAULT_BRANCH=main
GIT_AUTO_COMMIT=true
GIT_COMMIT_MESSAGE_TEMPLATE="Integrated module {module_name} from {agent_id}"

# Deployment Strategies
DEPLOYMENT_DEFAULT_STRATEGY=blue-green  # hot-reload, blue-green, canary
CANARY_INITIAL_PERCENTAGE=10
CANARY_INCREMENT_PERCENTAGE=25
CANARY_INCREMENT_INTERVAL_MINUTES=30

# Rollback Configuration
AUTO_ROLLBACK_ENABLED=true
ROLLBACK_TIMEOUT_MINUTES=10
HEALTH_CHECK_INTERVAL_SECONDS=30

# ============================================================================
# FEATURE FLAGS
# ============================================================================
ENABLE_CHAT_INTERFACE=true
ENABLE_FILE_VERSIONING=true
ENABLE_AUTO_INTEGRATION=true
ENABLE_ROLLBACK=true
ENABLE_QUALITY_VERIFICATION=true
ENABLE_SECURITY_SCANNING=true
ENABLE_PERFORMANCE_BENCHMARKING=true
ENABLE_API_DOCUMENTATION=true
ENABLE_WEBHOOKS=false
ENABLE_EMAIL_NOTIFICATIONS=false
ENABLE_SLACK_NOTIFICATIONS=false

# ============================================================================
# NOTIFICATION CONFIGURATION (if enabled)
# ============================================================================
# Email
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=
SMTP_PASSWORD=
SMTP_FROM_EMAIL=noreply@ymera.com
SMTP_USE_TLS=true

# Slack
SLACK_WEBHOOK_URL=
SLACK_CHANNEL=#project-agent
SLACK_USERNAME=Project Agent

# ============================================================================
# EXTERNAL SERVICES (Optional)
# ============================================================================
# Elasticsearch (for advanced search & logging)
ELASTICSEARCH_URL=http://localhost:9200
ELASTICSEARCH_USERNAME=
ELASTICSEARCH_PASSWORD=
ELASTICSEARCH_INDEX_PREFIX=project_agent

# Sentry (Error tracking)
SENTRY_DSN=
SENTRY_ENVIRONMENT=production
SENTRY_TRACES_SAMPLE_RATE=0.1

# ============================================================================
# PERFORMANCE TUNING
# ============================================================================
# Worker Configuration
WORKER_COUNT=4  # Number of worker processes (for production)
WORKER_TIMEOUT=300  # Seconds
MAX_CONCURRENT_TASKS=100

# Connection Pools
HTTP_POOL_CONNECTIONS=100
HTTP_POOL_MAXSIZE=100
HTTP_MAX_RETRIES=3

# Caching
CACHE_TTL_SECONDS=300
CACHE_MAX_SIZE_MB=500

# ============================================================================
# DEVELOPMENT SETTINGS (Override in development)
# ============================================================================
# DEV_MODE=true
# DEBUG=true
# LOG_LEVEL=DEBUG
# DATABASE_ECHO=true
# CORS_ORIGINS=["*"]
# RATE_LIMIT_ENABLED=false

# ============================================================================
# LEARNING AGENT CONFIGURATION
# ============================================================================
# Required for learning_agent.py validation
# These settings configure the Learning Agent's knowledge capture and distribution

# Database URL for learning agent (required for Pydantic validation)
LEARNING_AGENT_DATABASE_URL=postgresql+asyncpg://username:password@localhost:5432/ymera_learning

# JWT Secret for learning agent authentication (required)
LEARNING_AGENT_JWT_SECRET_KEY=Qw1n8vZkQ2p7xJt9sL4e6bR3uY5c0aW8hT2mV1zX7kP6fS3dG

# Learning Agent API Configuration
LEARNING_AGENT_HOST=0.0.0.0
LEARNING_AGENT_PORT=8050
LEARNING_AGENT_TIMEOUT=120

# Knowledge Storage
LEARNING_AGENT_KNOWLEDGE_RETENTION_DAYS=365
LEARNING_AGENT_MAX_KNOWLEDGE_ITEMS=100000

# Learning Rate & Optimization
LEARNING_AGENT_LEARNING_RATE=0.001
LEARNING_AGENT_BATCH_SIZE=32
LEARNING_AGENT_UPDATE_INTERVAL=300  # seconds

# External Knowledge Sources
LEARNING_AGENT_ENABLE_WEB_SEARCH=false
LEARNING_AGENT_ENABLE_API_LEARNING=true
LEARNING_AGENT_ENABLE_WEBSOCKET=false

# ============================================================================
# OPTIONAL DEPENDENCY CONFIGURATION
# ============================================================================
# Configure which optional features are enabled based on installed packages
# Agents will automatically detect available packages, but you can override here

# Observability (opentelemetry, prometheus, structlog)
ENABLE_OPENTELEMETRY=true
ENABLE_PROMETHEUS_METRICS=true
ENABLE_STRUCTURED_LOGGING=true

# ML & Data Science (numpy, sklearn, sentence-transformers)
ENABLE_ML_FEATURES=true
ENABLE_VECTOR_SEARCH=true

# NLP Features (nltk, spacy, textstat)
ENABLE_NLP_FEATURES=true
ENABLE_GRAMMAR_CHECK=true

# LLM Integration (openai, anthropic, tiktoken)
ENABLE_LLM_INTEGRATION=true
ENABLE_TOKEN_COUNTING=true

# System Monitoring (psutil)
ENABLE_SYSTEM_MONITORING=true

# Web Services (aiohttp, httpx, websockets)
ENABLE_HTTP_CLIENT=true
ENABLE_WEBSOCKET_SUPPORT=true
