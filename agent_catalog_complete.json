{
  "total_files": 91,
  "total_classes": 493,
  "total_functions": 568,
  "total_async_functions": 1579,
  "total_lines": 63136,
  "agents_detail": [
    {
      "file": "./prod_agent_manager.py",
      "classes": [
        "AgentManagerConfig",
        "AgentRegistrationRequest",
        "AgentReportRequest",
        "AgentManagerMetrics",
        "RateLimiter",
        "CircuitBreakerState",
        "CircuitBreaker",
        "HealthMonitor",
        "ProductionAgentManager",
        "AgentModel",
        "AgentReportModel",
        "AgentMetricsModel",
        "AgentStatus",
        "AgentType",
        "ReportStatus",
        "IssueType",
        "IssueSeverity"
      ],
      "class_count": 17,
      "functions": [
        "retry_on_db_error",
        "measure_operation",
        "validate_agent_id",
        "validate_capabilities",
        "validate_metrics",
        "decorator",
        "__init__",
        "__init__",
        "__init__",
        "register_check"
      ],
      "function_count": 13,
      "async_functions": [
        "db_transaction",
        "create_agent_manager",
        "main",
        "acquire",
        "call",
        "run_checks",
        "start",
        "stop",
        "register_agent",
        "receive_agent_report"
      ],
      "async_function_count": 32,
      "has_base_agent": false,
      "async_methods": 32,
      "lines": 1430,
      "imports": [
        "asyncio",
        "logging",
        "uuid",
        "json",
        "time",
        "typing",
        "datetime",
        "enum",
        "dataclasses",
        "functools",
        "contextlib",
        "structlog",
        "sqlalchemy",
        "sqlalchemy.ext.asyncio",
        "sqlalchemy.pool"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": true,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./agent_catalog_analyzer.py",
      "classes": [],
      "class_count": 0,
      "functions": [
        "analyze_agent_file",
        "create_agent_catalog"
      ],
      "function_count": 2,
      "async_functions": [],
      "async_function_count": 0,
      "has_base_agent": true,
      "async_methods": 0,
      "lines": 191,
      "imports": [
        "os",
        "ast",
        "json",
        "pathlib",
        "typing"
      ],
      "has_async_init": true,
      "has_process_method": true,
      "has_cleanup": true,
      "has_database": false,
      "has_api": false,
      "has_file_ops": true,
      "status": "analyzed"
    },
    {
      "file": "./ai_agents_production.py",
      "classes": [
        "AgentType",
        "ConfidenceLevel",
        "PriorityLevel",
        "AgentResponse",
        "LearningPattern",
        "AgentLearningManager",
        "AIAgent",
        "AIAgentOrchestrator"
      ],
      "class_count": 8,
      "functions": [
        "to_dict",
        "to_dict",
        "__init__",
        "__init__",
        "_build_system_prompt",
        "_generate_cache_key",
        "_extract_context_tags",
        "_create_fallback_response",
        "_create_error_response",
        "_get_from_cache"
      ],
      "function_count": 17,
      "async_functions": [
        "example_usage",
        "initialize",
        "_create_tables",
        "record_pattern",
        "get_relevant_patterns",
        "_load_patterns_cache",
        "update_performance",
        "analyze",
        "initialize",
        "analyze_with_best_agent"
      ],
      "async_function_count": 12,
      "has_base_agent": true,
      "async_methods": 12,
      "lines": 1051,
      "imports": [
        "asyncio",
        "json",
        "time",
        "logging",
        "datetime",
        "typing",
        "dataclasses",
        "enum",
        "hashlib",
        "uuid",
        "collections",
        "anthropic"
      ],
      "has_async_init": true,
      "has_process_method": false,
      "has_cleanup": true,
      "has_database": false,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./agent_benchmarks.py",
      "classes": [
        "AgentBenchmark"
      ],
      "class_count": 1,
      "functions": [
        "__init__",
        "get_system_info"
      ],
      "function_count": 2,
      "async_functions": [
        "main",
        "benchmark_agent_initialization",
        "benchmark_agent_operation",
        "benchmark_agent_comprehensive",
        "benchmark_all_agents"
      ],
      "async_function_count": 5,
      "has_base_agent": false,
      "async_methods": 5,
      "lines": 260,
      "imports": [
        "asyncio",
        "time",
        "json",
        "statistics",
        "datetime",
        "psutil",
        "os",
        "sys",
        "importlib.util"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": true,
      "status": "analyzed"
    },
    {
      "file": "./run_agent_validation.py",
      "classes": [],
      "class_count": 0,
      "functions": [
        "run_command",
        "main"
      ],
      "function_count": 2,
      "async_functions": [],
      "async_function_count": 0,
      "has_base_agent": false,
      "async_methods": 0,
      "lines": 146,
      "imports": [
        "subprocess",
        "sys",
        "os",
        "datetime"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./editing_agent_v2 (1).py",
      "classes": [
        "EditType",
        "ContentType",
        "EditingMode",
        "EditSuggestion",
        "EditingSession",
        "ContentAnalysis",
        "EditingAgent"
      ],
      "class_count": 7,
      "functions": [
        "to_dict",
        "to_dict",
        "__init__",
        "_interpret_readability",
        "_get_agent_metrics"
      ],
      "function_count": 5,
      "async_functions": [
        "main",
        "_setup_subscriptions",
        "_start_background_tasks",
        "_initialize_tools",
        "_handle_task",
        "_start_editing_session",
        "_analyze_content",
        "_analyze_tone",
        "_analyze_content_specific",
        "_generate_suggestions"
      ],
      "async_function_count": 28,
      "has_base_agent": true,
      "async_methods": 28,
      "lines": 1367,
      "imports": [
        "asyncio",
        "json",
        "time",
        "re",
        "os",
        "traceback",
        "typing",
        "dataclasses",
        "enum",
        "uuid",
        "difflib",
        "datetime",
        "base_agent",
        "spacy",
        "nltk"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./prod_monitoring_agent.py",
      "classes": [
        "MetricType",
        "AlertSeverity",
        "AlertStatus",
        "HealthStatus",
        "Metric",
        "Alert",
        "AlertRule",
        "SLADefinition",
        "RealTimeMonitoringAgent"
      ],
      "class_count": 9,
      "functions": [
        "to_dict",
        "to_dict",
        "can_trigger",
        "__init__",
        "_signal_handler",
        "_init_prometheus_metrics",
        "_init_anomaly_detectors",
        "_setup_default_alert_rules",
        "_setup_system_collectors",
        "_store_metric"
      ],
      "function_count": 10,
      "async_functions": [
        "start",
        "_setup_subscriptions",
        "_start_background_tasks",
        "_execute_task_impl",
        "_collect_system_metrics",
        "_collect_cpu_metrics",
        "_collect_memory_metrics",
        "_collect_disk_metrics",
        "_collect_network_metrics",
        "_collect_process_metrics"
      ],
      "async_function_count": 19,
      "has_base_agent": true,
      "async_methods": 19,
      "lines": 922,
      "imports": [
        "asyncio",
        "json",
        "time",
        "psutil",
        "aiohttp",
        "typing",
        "dataclasses",
        "enum",
        "uuid",
        "collections",
        "statistics",
        "datetime",
        "traceback",
        "signal",
        "base_agent"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": true,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./llm_agent.py",
      "classes": [
        "LLMProvider",
        "MessageRole",
        "ConversationMessage",
        "ConversationMemory",
        "RAGDocument",
        "LLMConfig",
        "LLMAgent"
      ],
      "class_count": 7,
      "functions": [
        "__init__",
        "_select_model",
        "_get_agent_metrics"
      ],
      "function_count": 3,
      "async_functions": [
        "start",
        "_execute_task_impl",
        "_generate_text_task",
        "_chat_completion_task",
        "_create_embedding_task",
        "_semantic_search_task",
        "_summarize_text_task",
        "_handle_live_chat_response_request",
        "_initialize_clients",
        "_setup_vector_database"
      ],
      "async_function_count": 19,
      "has_base_agent": true,
      "async_methods": 19,
      "lines": 780,
      "imports": [
        "asyncio",
        "json",
        "time",
        "uuid",
        "traceback",
        "os",
        "typing",
        "dataclasses",
        "enum",
        "hashlib",
        "tiktoken",
        "re",
        "openai",
        "anthropic",
        "qdrant_client"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./agent_tester.py",
      "classes": [
        "AgentTester"
      ],
      "class_count": 1,
      "functions": [
        "__init__"
      ],
      "function_count": 1,
      "async_functions": [
        "main",
        "test_agent_initialization",
        "test_agent_methods",
        "test_agent_comprehensive",
        "test_all_agents"
      ],
      "async_function_count": 5,
      "has_base_agent": false,
      "async_methods": 5,
      "lines": 189,
      "imports": [
        "asyncio",
        "json",
        "sys",
        "importlib.util",
        "pathlib",
        "datetime",
        "traceback"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": true,
      "status": "analyzed"
    },
    {
      "file": "./chatting_files_agent_api_system.py",
      "classes": [
        "TaskRequest",
        "ChatMessage",
        "FileUploadResponse",
        "AgentResponse",
        "FileManager",
        "LiveChatManager",
        "AgentAPI"
      ],
      "class_count": 7,
      "functions": [
        "__init__",
        "_determine_task_type",
        "get_file_metadata",
        "list_files",
        "__init__",
        "_determine_task_from_message",
        "get_conversation_history",
        "get_active_sessions",
        "__init__",
        "_setup_routes"
      ],
      "function_count": 10,
      "async_functions": [
        "create_complete_system",
        "upload_file",
        "download_file",
        "process_file_with_agent",
        "cleanup_temporary_files",
        "_delete_file",
        "connect",
        "disconnect",
        "send_message",
        "broadcast_message"
      ],
      "async_function_count": 28,
      "has_base_agent": false,
      "async_methods": 28,
      "lines": 786,
      "imports": [
        "asyncio",
        "json",
        "os",
        "uuid",
        "mimetypes",
        "datetime",
        "typing",
        "pathlib",
        "aiofiles",
        "websockets",
        "fastapi",
        "fastapi.middleware.cors",
        "fastapi.responses",
        "fastapi.staticfiles",
        "pydantic"
      ],
      "has_async_init": false,
      "has_process_method": true,
      "has_cleanup": true,
      "has_database": false,
      "has_api": true,
      "has_file_ops": true,
      "status": "analyzed"
    },
    {
      "file": "./examination_agent.py",
      "classes": [
        "ExaminationType",
        "QualityLevel",
        "ExaminationResult",
        "ComprehensiveAnalysis",
        "ExaminationAgent"
      ],
      "class_count": 5,
      "functions": [
        "__init__",
        "_initialize_quality_analyzers",
        "_setup_plagiarism_detection",
        "_initialize_sentiment_analysis",
        "_setup_bias_detection",
        "_initialize_toxicity_detection",
        "_setup_fact_checking",
        "_load_quality_benchmarks",
        "_load_domain_standards",
        "_determine_quality_level"
      ],
      "function_count": 11,
      "async_functions": [
        "start",
        "_execute_task_impl",
        "_examine_content_quality",
        "_check_plagiarism",
        "_analyze_sentiment",
        "_analyze_readability",
        "_analyze_structure",
        "_check_factual_accuracy",
        "_detect_bias",
        "_detect_toxicity"
      ],
      "async_function_count": 26,
      "has_base_agent": true,
      "async_methods": 26,
      "lines": 1206,
      "imports": [
        "asyncio",
        "json",
        "time",
        "re",
        "hashlib",
        "statistics",
        "traceback",
        "os",
        "typing",
        "dataclasses",
        "enum",
        "collections",
        "numpy",
        "datetime",
        "base_agent"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./learning-agent-security.py",
      "classes": [
        "VaultManager",
        "EnhancedEncryptionService",
        "DatabasePool",
        "RedisManager",
        "BaseModel",
        "TransformerModel",
        "KnowledgeExtractionModel",
        "ModelFactory",
        "AdvancedMetrics"
      ],
      "class_count": 9,
      "functions": [
        "__init__",
        "_get_latest_version",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "forward",
        "__init__"
      ],
      "function_count": 13,
      "async_functions": [
        "initialize",
        "get_secret",
        "store_secret",
        "rotate_secret",
        "initialize",
        "encrypt",
        "decrypt",
        "hash_password",
        "verify_password",
        "initialize"
      ],
      "async_function_count": 43,
      "has_base_agent": false,
      "async_methods": 43,
      "lines": 839,
      "imports": [
        "hvac",
        "asyncio",
        "typing",
        "logging",
        "datetime",
        "cryptography.hazmat.primitives",
        "cryptography.hazmat.primitives.kdf.pbkdf2",
        "cryptography.hazmat.primitives.ciphers",
        "cryptography.hazmat.backends",
        "cryptography.hazmat.primitives",
        "base64",
        "os",
        "secrets",
        "typing",
        "sqlalchemy.ext.asyncio"
      ],
      "has_async_init": true,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": true,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./agent_manager_integrated (1).py",
      "classes": [
        "SupremeAgentManager"
      ],
      "class_count": 1,
      "functions": [
        "__init__"
      ],
      "function_count": 1,
      "async_functions": [
        "start",
        "register_agent",
        "update_agent_metrics"
      ],
      "async_function_count": 3,
      "has_base_agent": false,
      "async_methods": 3,
      "lines": 272,
      "imports": [
        "logging",
        "asyncio",
        "datetime",
        "typing",
        "enum",
        "agent_lifecycle_manager",
        "agent_surveillance",
        "agent_orchestrator",
        "agent_code_of_conduct",
        "database.secure_database_manager",
        "security.rbac_manager",
        "monitoring.telemetry_manager",
        "monitoring.alert_manager",
        "ai.multi_modal_ai",
        "config"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./learning_agent_helpers.py",
      "classes": [
        "AgentCommunicator",
        "ModelTrainer",
        "LearningAnalytics",
        "AgentLifecycleManager",
        "KnowledgeValidator",
        "PerformanceTracker",
        "KnowledgeQualityScorer",
        "PatternAnalyzer",
        "KnowledgeMerger",
        "KnowledgeExporter"
      ],
      "class_count": 10,
      "functions": [
        "calculate_similarity",
        "extract_keywords",
        "normalize_text",
        "calculate_confidence_score",
        "format_insight",
        "calculate_learning_velocity",
        "identify_learning_trends",
        "__init__",
        "__init__",
        "__init__"
      ],
      "function_count": 30,
      "async_functions": [
        "send_knowledge",
        "send_knowledge_response",
        "notify_new_knowledge",
        "broadcast_insight",
        "start",
        "stop",
        "train_models",
        "update_agent_model",
        "_train_agent_models",
        "_train_pattern_models"
      ],
      "async_function_count": 20,
      "has_base_agent": false,
      "async_methods": 20,
      "lines": 1110,
      "imports": [
        "uuid",
        "structlog",
        "typing",
        "datetime",
        "sqlalchemy",
        "sqlalchemy.ext.asyncio",
        "collections",
        "re",
        "collections",
        "models",
        "models",
        "models",
        "models",
        "models",
        "models"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": true,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./tests/agents/test_metrics_agent.py",
      "classes": [
        "TestMetricsAgent",
        "TestMetricsAgentMethods"
      ],
      "class_count": 2,
      "functions": [
        "test_metrics_agent_import"
      ],
      "function_count": 1,
      "async_functions": [
        "test_metrics_agent_initialization_mocked",
        "test_agent_has_required_methods"
      ],
      "async_function_count": 2,
      "has_base_agent": true,
      "async_methods": 2,
      "lines": 52,
      "imports": [
        "pytest",
        "unittest.mock",
        "metrics_agent",
        "metrics_agent",
        "base_agent",
        "metrics_agent",
        "base_agent"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./tests/agents/test_base_agent.py",
      "classes": [
        "TestAgentConfig",
        "TestAgentEnums",
        "TestTaskRequest",
        "TestBaseAgent",
        "TestAgentLifecycle",
        "TestAgentConfiguration",
        "TestAgent",
        "TestAgent",
        "TestAgent"
      ],
      "class_count": 9,
      "functions": [
        "test_agent_config_initialization",
        "test_agent_config_defaults",
        "test_agent_config_custom_settings",
        "test_agent_status_enum",
        "test_task_status_enum",
        "test_priority_enum",
        "test_task_request_initialization",
        "test_base_agent_is_abstract",
        "test_base_agent_subclass_creation",
        "test_agent_config_serialization"
      ],
      "function_count": 10,
      "async_functions": [
        "test_agent_graceful_shutdown",
        "test_agent_initialization_mocked",
        "_process_task",
        "_handle_message",
        "_execute_task_impl",
        "start",
        "_process_task",
        "_handle_message",
        "_execute_task_impl",
        "start"
      ],
      "async_function_count": 14,
      "has_base_agent": true,
      "async_methods": 14,
      "lines": 216,
      "imports": [
        "pytest",
        "asyncio",
        "unittest.mock",
        "base_agent",
        "dataclasses"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./tests/agents/test_security_agent.py",
      "classes": [
        "TestSecurityAgent",
        "TestSecurityAgentMethods"
      ],
      "class_count": 2,
      "functions": [
        "test_security_agent_import"
      ],
      "function_count": 1,
      "async_functions": [
        "test_security_agent_initialization_mocked",
        "test_agent_has_required_methods"
      ],
      "async_function_count": 2,
      "has_base_agent": true,
      "async_methods": 2,
      "lines": 66,
      "imports": [
        "pytest",
        "unittest.mock",
        "security_agent",
        "cryptography.fernet",
        "cryptography.fernet",
        "security_agent",
        "base_agent",
        "security_agent",
        "base_agent"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./tests/agents/test_validation_agent.py",
      "classes": [
        "TestValidationAgent",
        "TestValidationAgentMethods"
      ],
      "class_count": 2,
      "functions": [
        "test_validation_agent_import"
      ],
      "function_count": 1,
      "async_functions": [
        "test_validation_agent_initialization_mocked",
        "test_agent_has_required_methods"
      ],
      "async_function_count": 2,
      "has_base_agent": true,
      "async_methods": 2,
      "lines": 58,
      "imports": [
        "pytest",
        "unittest.mock",
        "validation_agent",
        "validation_agent",
        "base_agent",
        "validation_agent",
        "base_agent"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./tests/agents/test_communication_agent.py",
      "classes": [
        "TestCommunicationAgent",
        "TestCommunicationAgentMethods"
      ],
      "class_count": 2,
      "functions": [
        "test_communication_agent_import"
      ],
      "function_count": 1,
      "async_functions": [
        "test_communication_agent_initialization_mocked",
        "test_agent_has_required_methods"
      ],
      "async_function_count": 2,
      "has_base_agent": true,
      "async_methods": 2,
      "lines": 52,
      "imports": [
        "pytest",
        "unittest.mock",
        "communication_agent",
        "communication_agent",
        "base_agent",
        "communication_agent",
        "base_agent"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./production_base_agent.py",
      "classes": [
        "AgentState",
        "Priority",
        "AgentConfig",
        "TaskRequest",
        "TaskResult",
        "BaseAgent",
        "AgentMetrics"
      ],
      "class_count": 7,
      "functions": [
        "to_dict",
        "to_dict",
        "to_dict",
        "__init__",
        "_setup_logging"
      ],
      "function_count": 5,
      "async_functions": [
        "start",
        "_connect_nats",
        "_connect_postgres",
        "_connect_redis",
        "_setup_subscriptions",
        "_start_background_tasks",
        "_subscribe",
        "_publish",
        "_publish_to_stream",
        "_request"
      ],
      "async_function_count": 22,
      "has_base_agent": true,
      "async_methods": 22,
      "lines": 654,
      "imports": [
        "asyncio",
        "json",
        "logging",
        "time",
        "uuid",
        "abc",
        "dataclasses",
        "datetime",
        "enum",
        "typing",
        "contextlib",
        "traceback",
        "nats",
        "nats.errors",
        "asyncpg"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": true,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./learning_agent.py",
      "classes": [
        "KnowledgeExtractor",
        "KnowledgeStore",
        "KnowledgeSharer",
        "LearningEngine",
        "LearningAgent"
      ],
      "class_count": 5,
      "functions": [
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "is_ready"
      ],
      "function_count": 6,
      "async_functions": [
        "extract_from_code",
        "extract_from_interaction",
        "store_knowledge",
        "retrieve_knowledge",
        "update_access_count",
        "share_to_agent",
        "learn_from_feedback",
        "_train_model",
        "predict_best_approach",
        "initialize"
      ],
      "async_function_count": 18,
      "has_base_agent": false,
      "async_methods": 18,
      "lines": 627,
      "imports": [
        "asyncio",
        "json",
        "datetime",
        "typing",
        "pathlib",
        "structlog",
        "numpy",
        "sqlalchemy",
        "sqlalchemy.ext.asyncio",
        "shared.config.settings",
        "shared.database.connection_pool",
        "shared.utils.metrics",
        "shared.communication.agent_communicator"
      ],
      "has_async_init": true,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": true,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./learning_agent_database.py",
      "classes": [
        "Agent",
        "Knowledge",
        "LearningSessionDB",
        "ChatMessageDB",
        "PerformanceMetric",
        "DatabaseManager",
        "DatabaseIntegratedLearningAgent"
      ],
      "class_count": 7,
      "functions": [
        "__init__",
        "__init__"
      ],
      "function_count": 2,
      "async_functions": [
        "main",
        "initialize",
        "close",
        "save_agent",
        "get_agent",
        "update_agent",
        "list_agents",
        "save_knowledge",
        "get_knowledge",
        "search_knowledge"
      ],
      "async_function_count": 25,
      "has_base_agent": false,
      "async_methods": 25,
      "lines": 591,
      "imports": [
        "sqlalchemy.ext.asyncio",
        "sqlalchemy.orm",
        "sqlalchemy",
        "datetime",
        "asyncio",
        "json",
        "typing",
        "redis.asyncio",
        "uuid",
        "hashlib",
        "sqlalchemy",
        "sqlalchemy",
        "sqlalchemy",
        "sqlalchemy",
        "datetime"
      ],
      "has_async_init": true,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": true,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./base_agent 2.py",
      "classes": [
        "Priority",
        "AgentConfig",
        "TaskRequest",
        "BaseAgent"
      ],
      "class_count": 4,
      "functions": [
        "__init__"
      ],
      "function_count": 1,
      "async_functions": [
        "start",
        "stop",
        "_publish",
        "_subscribe",
        "_handle_message"
      ],
      "async_function_count": 5,
      "has_base_agent": true,
      "async_methods": 5,
      "lines": 84,
      "imports": [
        "time",
        "typing",
        "enum",
        "dataclasses",
        "logging"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./security_agent.py",
      "classes": [
        "SecurityLevel",
        "ThreatType",
        "AuthMethod",
        "SecurityEvent",
        "AuthToken",
        "SecurityPolicy",
        "SecurityAgent"
      ],
      "class_count": 7,
      "functions": [
        "__init__",
        "_generate_master_key",
        "_load_default_policies",
        "_calculate_risk_level",
        "_calculate_threat_risk_score"
      ],
      "function_count": 5,
      "async_functions": [
        "start",
        "_execute_task_impl",
        "_authenticate_user",
        "_verify_password",
        "_get_user_data",
        "_record_failed_attempt",
        "_create_session",
        "_generate_auth_token",
        "_authorize_request",
        "_encrypt_data"
      ],
      "async_function_count": 26,
      "has_base_agent": true,
      "async_methods": 26,
      "lines": 1148,
      "imports": [
        "asyncio",
        "json",
        "time",
        "hashlib",
        "hmac",
        "jwt",
        "bcrypt",
        "typing",
        "dataclasses",
        "enum",
        "re",
        "uuid",
        "datetime",
        "ipaddress",
        "secrets"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": true,
      "status": "analyzed"
    },
    {
      "file": "./enhanced_base_agent.py",
      "classes": [
        "Priority",
        "AgentState",
        "ConnectionState",
        "CircuitBreakerState",
        "AgentConfig",
        "TaskRequest",
        "AgentMetrics",
        "CircuitBreaker",
        "BaseAgent",
        "ContextFilter"
      ],
      "class_count": 10,
      "functions": [
        "validate",
        "to_dict",
        "from_dict",
        "is_expired",
        "should_retry",
        "to_dict",
        "__init__",
        "get_state",
        "__init__",
        "_setup_logging"
      ],
      "function_count": 16,
      "async_functions": [
        "run_agent",
        "call",
        "_on_success",
        "_on_failure",
        "reset",
        "start",
        "_connect_nats",
        "_connect_postgres",
        "_connect_redis",
        "_initialize_database"
      ],
      "async_function_count": 46,
      "has_base_agent": true,
      "async_methods": 46,
      "lines": 1334,
      "imports": [
        "asyncio",
        "json",
        "time",
        "signal",
        "sys",
        "uuid",
        "typing",
        "enum",
        "dataclasses",
        "datetime",
        "contextlib",
        "logging",
        "functools",
        "random",
        "traceback"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": true,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./production_monitoring_agent.py",
      "classes": [
        "MetricType",
        "AlertSeverity",
        "AlertStatus",
        "Metric",
        "Alert",
        "AlertRule",
        "RealTimeMonitoringAgent"
      ],
      "class_count": 7,
      "functions": [
        "to_dict",
        "to_dict",
        "to_dict",
        "__init__",
        "_setup_default_alert_rules",
        "_setup_system_collectors",
        "_store_metric_unsafe"
      ],
      "function_count": 7,
      "async_functions": [
        "_initialize_database",
        "_load_alert_rules_from_db",
        "_setup_subscriptions",
        "_start_background_tasks",
        "_handle_task",
        "_collect_system_metrics_loop",
        "_collect_cpu_metrics",
        "_collect_memory_metrics",
        "_collect_disk_metrics",
        "_collect_network_metrics"
      ],
      "async_function_count": 50,
      "has_base_agent": true,
      "async_methods": 50,
      "lines": 1803,
      "imports": [
        "asyncio",
        "json",
        "time",
        "typing",
        "dataclasses",
        "enum",
        "uuid",
        "collections",
        "psutil",
        "aiohttp",
        "logging",
        "statistics",
        "datetime",
        "enhanced_base_agent"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": true,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./example_agent.py",
      "classes": [],
      "class_count": 0,
      "functions": [],
      "function_count": 0,
      "async_functions": [
        "task_handler_example",
        "main"
      ],
      "async_function_count": 2,
      "has_base_agent": false,
      "async_methods": 2,
      "lines": 60,
      "imports": [
        "asyncio",
        "logging",
        "agent_client"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./agent_lifecycle_manager.py",
      "classes": [
        "AgentLifecycleManager"
      ],
      "class_count": 1,
      "functions": [
        "__init__",
        "_validate_action_for_status"
      ],
      "function_count": 2,
      "async_functions": [
        "request_agent_action",
        "_execute_agent_action",
        "_notify_admins_of_pending_approval",
        "_notify_agent_of_status_change",
        "get_agent_lifecycle_history"
      ],
      "async_function_count": 5,
      "has_base_agent": false,
      "async_methods": 5,
      "lines": 298,
      "imports": [
        "logging",
        "asyncio",
        "typing",
        "datetime",
        "enum",
        "uuid",
        "json",
        "models",
        "monitoring.telemetry_manager",
        "sqlalchemy",
        "models",
        "sqlalchemy"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": true,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./agent_manager_production.py",
      "classes": [
        "User",
        "Agent",
        "Task",
        "AdminApproval",
        "AuditLog",
        "SecurityEvent",
        "AgentReport",
        "UserCreate",
        "AgentCreate",
        "TaskCreate",
        "AdminApprovalUpdate",
        "AgentActionRequest",
        "AgentReportSubmit",
        "AgentStatus",
        "AgentReportStatus",
        "AgentAction",
        "AdminApprovalStatus",
        "EnterpriseAgentManager",
        "MandatoryReportingEnforcer"
      ],
      "class_count": 19,
      "functions": [
        "__init__",
        "init_metrics",
        "_hash_api_key",
        "_hash_password",
        "_verify_password",
        "create_access_token",
        "__init__"
      ],
      "function_count": 7,
      "async_functions": [
        "startup",
        "shutdown",
        "init_task_queue",
        "init_cache_manager",
        "init_telemetry",
        "init_alerts",
        "init_security",
        "init_compliance",
        "init_analytics",
        "get_db_session"
      ],
      "async_function_count": 34,
      "has_base_agent": false,
      "async_methods": 34,
      "lines": 1502,
      "imports": [
        "asyncio",
        "logging",
        "os",
        "time",
        "json",
        "uuid",
        "traceback",
        "signal",
        "typing",
        "datetime",
        "enum",
        "dataclasses",
        "hashlib",
        "secrets",
        "redis.asyncio"
      ],
      "has_async_init": false,
      "has_process_method": true,
      "has_cleanup": false,
      "has_database": true,
      "has_api": true,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./enhanced_workspace/agents/integrated/agents_enhanced.py",
      "error": "SyntaxError: unterminated triple-quoted string literal (detected at line 148) (<unknown>, line 147)",
      "status": "syntax_error"
    },
    {
      "file": "./generate_agent_testing_report.py",
      "classes": [],
      "class_count": 0,
      "functions": [
        "generate_report"
      ],
      "function_count": 1,
      "async_functions": [],
      "async_function_count": 0,
      "has_base_agent": false,
      "async_methods": 0,
      "lines": 180,
      "imports": [
        "json",
        "datetime",
        "collections"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": true,
      "status": "analyzed"
    },
    {
      "file": "./agent_mapper.py",
      "classes": [],
      "class_count": 0,
      "functions": [
        "create_agent_map"
      ],
      "function_count": 1,
      "async_functions": [],
      "async_function_count": 0,
      "has_base_agent": true,
      "async_methods": 0,
      "lines": 144,
      "imports": [
        "json",
        "pathlib",
        "graphviz"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": true,
      "status": "analyzed"
    },
    {
      "file": "./test_project_agent.py",
      "classes": [
        "TestQualityAnalyzer",
        "TestProjectAgent"
      ],
      "class_count": 2,
      "functions": [
        "analyzer"
      ],
      "function_count": 1,
      "async_functions": [
        "test_analyze_high_quality_code",
        "test_analyze_low_quality_code",
        "test_receive_agent_output"
      ],
      "async_function_count": 3,
      "has_base_agent": false,
      "async_methods": 3,
      "lines": 45,
      "imports": [
        "pytest",
        "agents.project_agent.agent"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./agent_discovery.py",
      "classes": [
        "DiscoveryStrategy",
        "DiscoveryRequest",
        "AgentDiscovery"
      ],
      "class_count": 3,
      "functions": [
        "__init__",
        "_apply_filters",
        "_round_robin_selection",
        "_health_weighted_selection",
        "_fastest_response_selection"
      ],
      "function_count": 5,
      "async_functions": [
        "discover_agent",
        "discover_agents",
        "_apply_strategy",
        "health_check_agent",
        "get_agent_address",
        "get_available_capabilities",
        "get_agents_for_workflow"
      ],
      "async_function_count": 7,
      "has_base_agent": false,
      "async_methods": 7,
      "lines": 288,
      "imports": [
        "asyncio",
        "typing",
        "dataclasses",
        "enum",
        "structlog",
        "agent_registry",
        "random",
        "random"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./performance_engine_agent.py",
      "classes": [
        "PerformanceMetric",
        "OptimizationStrategy",
        "AlertSeverity",
        "PerformanceThreshold",
        "PerformanceAlert",
        "OptimizationRecommendation",
        "PerformanceProfile",
        "PerformanceEngineAgent"
      ],
      "class_count": 8,
      "functions": [
        "__init__",
        "_init_prometheus_metrics",
        "_init_recommendation_engine"
      ],
      "function_count": 3,
      "async_functions": [
        "start",
        "_execute_task_impl",
        "_monitor_system",
        "_collect_system_metrics",
        "_profile_application",
        "_detect_bottlenecks",
        "_optimize_performance"
      ],
      "async_function_count": 7,
      "has_base_agent": true,
      "async_methods": 7,
      "lines": 622,
      "imports": [
        "asyncio",
        "json",
        "time",
        "psutil",
        "gc",
        "typing",
        "dataclasses",
        "enum",
        "uuid",
        "statistics",
        "collections",
        "threading",
        "multiprocessing",
        "concurrent.futures",
        "cProfile"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./enhanced_agent_lifecycle.py",
      "classes": [
        "AgentStatus",
        "AgentHealthStatus",
        "AgentRegistrationRequest",
        "AgentMetricsSnapshot",
        "AgentLifecycleManager"
      ],
      "class_count": 5,
      "functions": [
        "validate_capabilities",
        "__init__",
        "_assess_agent_health"
      ],
      "function_count": 3,
      "async_functions": [
        "register_agent",
        "_provision_agent",
        "_handle_provisioning_failure",
        "update_agent_metrics",
        "_handle_critical_agent",
        "_handle_degraded_agent",
        "_attempt_auto_remediation",
        "_execute_remediation_step",
        "quarantine_agent",
        "get_agent_analytics"
      ],
      "async_function_count": 15,
      "has_base_agent": false,
      "async_methods": 15,
      "lines": 779,
      "imports": [
        "logging",
        "asyncio",
        "datetime",
        "typing",
        "uuid",
        "enum",
        "json",
        "pydantic",
        "sqlalchemy",
        "sqlalchemy.ext.asyncio",
        "config",
        "database.secure_database_manager",
        "models.secure_models",
        "security.rbac_manager",
        "monitoring.telemetry_manager"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": true,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./activate_agents.py",
      "classes": [
        "CodeOfConductMonitor",
        "AgentActivator"
      ],
      "class_count": 2,
      "functions": [
        "__init__",
        "get_compliance_report",
        "__init__"
      ],
      "function_count": 3,
      "async_functions": [
        "main",
        "load_code_of_conduct",
        "validate_agent_behavior",
        "log_compliance_check",
        "initialize",
        "_check_environment",
        "activate_agent_manager",
        "activate_project_agent",
        "activate_learning_agent",
        "run_activation_tests"
      ],
      "async_function_count": 12,
      "has_base_agent": false,
      "async_methods": 12,
      "lines": 408,
      "imports": [
        "asyncio",
        "logging",
        "os",
        "sys",
        "pathlib",
        "typing",
        "datetime"
      ],
      "has_async_init": true,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": true,
      "status": "analyzed"
    },
    {
      "file": "./coding_agent.py",
      "classes": [
        "CodeLanguage",
        "ExecutionStatus",
        "CodeExecutionRequest",
        "CodeExecutionResult",
        "CodingAgentMetrics",
        "SecurityValidator",
        "CodeExecutor",
        "CodingAgent"
      ],
      "class_count": 8,
      "functions": [
        "validate",
        "get_cache_key",
        "to_dict",
        "to_dict",
        "validate_code",
        "__init__",
        "_set_resource_limits",
        "cleanup",
        "__init__"
      ],
      "function_count": 9,
      "async_functions": [
        "main",
        "execute",
        "_execute_python",
        "_execute_javascript",
        "_execute_bash",
        "_execute_sql",
        "_initialize_database",
        "_handle_task",
        "_handle_execute_code",
        "_handle_validate_code"
      ],
      "async_function_count": 20,
      "has_base_agent": true,
      "async_methods": 20,
      "lines": 1095,
      "imports": [
        "asyncio",
        "json",
        "hashlib",
        "subprocess",
        "tempfile",
        "os",
        "sys",
        "re",
        "typing",
        "dataclasses",
        "datetime",
        "pathlib",
        "resource",
        "signal",
        "contextlib"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": true,
      "has_database": false,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./agent_lifecycle_mgr.py",
      "classes": [
        "AgentStatus",
        "AgentAction",
        "AgentActionRequest",
        "AgentLifecycleManager"
      ],
      "class_count": 4,
      "functions": [
        "__init__"
      ],
      "function_count": 1,
      "async_functions": [
        "register_agent",
        "update_agent_status",
        "execute_agent_action",
        "_execute_action",
        "handle_security_violation",
        "get_agent",
        "list_agents",
        "count_agents",
        "decommission_agent",
        "monitor_agent_health"
      ],
      "async_function_count": 12,
      "has_base_agent": false,
      "async_methods": 12,
      "lines": 499,
      "imports": [
        "logging",
        "asyncio",
        "datetime",
        "typing",
        "uuid",
        "enum",
        "pydantic",
        "sqlalchemy",
        "sqlalchemy.ext.asyncio",
        "fastapi",
        "config",
        "database.secure_database_manager",
        "models.secure_models",
        "security.rbac_manager",
        "monitoring.telemetry_manager"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": true,
      "has_api": true,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./agent_surveillance.py",
      "classes": [
        "SurveillanceConfig",
        "AgentSurveillanceSystem"
      ],
      "class_count": 2,
      "functions": [
        "__init__",
        "__init__",
        "_prepare_agent_data"
      ],
      "function_count": 3,
      "async_functions": [
        "start_monitoring",
        "stop_monitoring",
        "_monitor_all_agents",
        "_analyze_agent_with_semaphore",
        "_analyze_agent",
        "_analyze_behavior_with_ai",
        "_check_health_metrics",
        "_handle_health_issues",
        "_handle_anomaly",
        "_is_agent_stale"
      ],
      "async_function_count": 16,
      "has_base_agent": false,
      "async_methods": 16,
      "lines": 529,
      "imports": [
        "asyncio",
        "logging",
        "datetime",
        "typing",
        "sqlalchemy",
        "sqlalchemy.ext.asyncio",
        "config",
        "database.secure_database_manager",
        "models.secure_models",
        "monitoring.alert_manager",
        "ai.multi_modal_ai"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": true,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./learning_agent_models.py",
      "classes": [
        "KnowledgeCategory",
        "LearningType",
        "InsightType",
        "PatternStatus",
        "KnowledgeEntryModel",
        "LearningSessionModel",
        "PatternModel",
        "InteractionLogModel",
        "InsightModel",
        "KnowledgeGraphModel",
        "AgentLearningProfileModel",
        "KnowledgeSubscriptionModel",
        "FeedbackModel",
        "ModelVersionModel",
        "KnowledgeEntry",
        "LearningSession",
        "Pattern",
        "Insight",
        "KnowledgeRequest",
        "LearningOutcome",
        "KnowledgeSubscription",
        "AgentLearningProfile"
      ],
      "class_count": 22,
      "functions": [],
      "function_count": 0,
      "async_functions": [],
      "async_function_count": 0,
      "has_base_agent": false,
      "async_methods": 0,
      "lines": 499,
      "imports": [
        "datetime",
        "enum",
        "typing",
        "dataclasses",
        "sqlalchemy",
        "sqlalchemy.orm",
        "shared.database.models"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": true,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./orchestrator_agent.py",
      "classes": [
        "AgentCapability",
        "TaskQueue",
        "WorkflowInstance",
        "OrchestratorAgent"
      ],
      "class_count": 4,
      "functions": [
        "load_percentage",
        "is_healthy",
        "priority_score",
        "put",
        "get",
        "size",
        "__init__",
        "_remove_from_queue",
        "_find_suitable_agents"
      ],
      "function_count": 9,
      "async_functions": [
        "start",
        "_execute_task_impl",
        "_load_workflow_definitions",
        "_handle_task_request_internal",
        "_try_immediate_routing",
        "_task_dispatcher",
        "_select_agent",
        "_performance_based_selection",
        "_least_loaded_selection",
        "_weighted_random_selection"
      ],
      "async_function_count": 26,
      "has_base_agent": true,
      "async_methods": 26,
      "lines": 926,
      "imports": [
        "asyncio",
        "json",
        "time",
        "traceback",
        "typing",
        "dataclasses",
        "collections",
        "heapq",
        "random",
        "base_agent",
        "opentelemetry"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./test_learning_agent.py",
      "classes": [
        "TestKnowledgeExtractor",
        "TestLearningAgent"
      ],
      "class_count": 2,
      "functions": [
        "extractor"
      ],
      "function_count": 1,
      "async_functions": [
        "test_extract_from_code",
        "test_extract_async_pattern",
        "test_receive_knowledge"
      ],
      "async_function_count": 3,
      "has_base_agent": false,
      "async_methods": 3,
      "lines": 41,
      "imports": [
        "pytest",
        "agents.learning_agent.agent"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./enterprise_agent_manager.py",
      "classes": [
        "AgentStatus",
        "AgentReportStatus",
        "AgentAction",
        "AdminApprovalStatus",
        "TaskStatus",
        "TaskPriority",
        "User",
        "Agent",
        "Task",
        "AdminApproval",
        "AuditLog",
        "SecurityEvent",
        "AgentReport",
        "DataAccessLog",
        "RateLimitLog",
        "ApiKey",
        "UserCreate",
        "AgentCreate",
        "TaskCreate",
        "AdminApprovalUpdate",
        "AgentActionRequest",
        "AgentReportSubmit",
        "QueueManager",
        "CacheManager",
        "SecurityManager",
        "EnterpriseAgentManager"
      ],
      "class_count": 26,
      "functions": [
        "__init__",
        "__init__",
        "__init__",
        "hash_password",
        "verify_password",
        "create_access_token",
        "hash_api_key",
        "generate_api_key",
        "__init__",
        "init_metrics"
      ],
      "function_count": 10,
      "async_functions": [
        "enqueue_task",
        "process_queue",
        "_get_next_task",
        "_process_task",
        "_handle_task_failure",
        "_requeue_with_backoff",
        "process_delayed_tasks",
        "_move_to_dead_letter",
        "get",
        "set"
      ],
      "async_function_count": 30,
      "has_base_agent": false,
      "async_methods": 30,
      "lines": 1491,
      "imports": [
        "asyncio",
        "logging",
        "os",
        "time",
        "json",
        "uuid",
        "traceback",
        "signal",
        "typing",
        "datetime",
        "enum",
        "dataclasses",
        "hashlib",
        "secrets",
        "re"
      ],
      "has_async_init": false,
      "has_process_method": true,
      "has_cleanup": false,
      "has_database": true,
      "has_api": true,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./project_agent_main.py",
      "classes": [],
      "class_count": 0,
      "functions": [],
      "function_count": 0,
      "async_functions": [
        "lifespan",
        "get_current_user",
        "health_check",
        "root",
        "register_user",
        "login",
        "logout",
        "create_project",
        "list_projects",
        "get_project"
      ],
      "async_function_count": 41,
      "has_base_agent": false,
      "async_methods": 41,
      "lines": 1251,
      "imports": [
        "fastapi",
        "fastapi.middleware.cors",
        "fastapi.responses",
        "contextlib",
        "typing",
        "datetime",
        "uuid",
        "logging",
        "asyncio",
        "json",
        "core.config",
        "core.database",
        "core.agent_orchestrator",
        "core.auth",
        "core.chat_interface"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": true,
      "has_file_ops": true,
      "status": "analyzed"
    },
    {
      "file": "./agent_communicator.py",
      "classes": [
        "AgentCommunicator"
      ],
      "class_count": 1,
      "functions": [
        "__init__"
      ],
      "function_count": 1,
      "async_functions": [
        "send_to_agent",
        "send_to_agent_manager",
        "broadcast",
        "subscribe",
        "unsubscribe"
      ],
      "async_function_count": 5,
      "has_base_agent": false,
      "async_methods": 5,
      "lines": 74,
      "imports": [
        "asyncio",
        "json",
        "datetime",
        "typing",
        "structlog",
        "shared.config.settings",
        "shared.database.connection_pool"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./app_agent_mgmt_endpoints.py",
      "classes": [],
      "class_count": 0,
      "functions": [],
      "function_count": 0,
      "async_functions": [
        "execute_agent_action",
        "report_security_violation",
        "get_agent_surveillance_report",
        "get_surveillance_dashboard",
        "approve_agent_action"
      ],
      "async_function_count": 5,
      "has_base_agent": false,
      "async_methods": 5,
      "lines": 309,
      "imports": [
        "agent_lifecycle_manager"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./learning_agent_main.py",
      "classes": [
        "AgentRole",
        "KnowledgeCategory",
        "LearningPriority",
        "AgentProfile",
        "KnowledgePacket",
        "LearningSession",
        "ChatMessage",
        "ProductionLearningAgent"
      ],
      "class_count": 8,
      "functions": [
        "__init__",
        "_calculate_similarity"
      ],
      "function_count": 2,
      "async_functions": [
        "main",
        "initialize",
        "register_agent",
        "analyze_agent_performance",
        "_identify_agent_strengths",
        "_identify_improvement_areas",
        "_generate_recommendations",
        "_calculate_performance_trend",
        "capture_knowledge",
        "distribute_knowledge"
      ],
      "async_function_count": 31,
      "has_base_agent": false,
      "async_methods": 31,
      "lines": 1149,
      "imports": [
        "asyncio",
        "logging",
        "json",
        "uuid",
        "datetime",
        "typing",
        "dataclasses",
        "enum",
        "structlog"
      ],
      "has_async_init": true,
      "has_process_method": true,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./code_editor_agent_api.py",
      "error": "SyntaxError: expected an indented block after class definition on line 119 (<unknown>, line 120)",
      "status": "syntax_error"
    },
    {
      "file": "./agent_manager_integration.py",
      "classes": [
        "AgentManagerOperationResult",
        "AgentManager"
      ],
      "class_count": 2,
      "functions": [
        "create_agent_manager",
        "__init__"
      ],
      "function_count": 2,
      "async_functions": [
        "start",
        "register_agent",
        "update_agent_metrics",
        "assign_task",
        "record_task_completion",
        "get_agent_status",
        "get_system_health",
        "quarantine_agent",
        "decommission_agent",
        "get_capacity_forecast"
      ],
      "async_function_count": 21,
      "has_base_agent": false,
      "async_methods": 21,
      "lines": 878,
      "imports": [
        "logging",
        "asyncio",
        "typing",
        "datetime",
        "enum",
        "agent_lifecycle_manager",
        "agent_surveillance",
        "agent_orchestrator",
        "database.secure_database_manager",
        "security.rbac_manager",
        "monitoring.telemetry_manager",
        "monitoring.alert_manager",
        "ai.multi_modal_ai",
        "config",
        "agent_lifecycle_manager"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./communication_agent.py",
      "classes": [
        "MessageType",
        "MessagePriority",
        "DeliveryMode",
        "Message",
        "MessageRoute",
        "ConversationContext",
        "CommunicationAgent"
      ],
      "class_count": 7,
      "functions": [
        "__init__",
        "_load_communication_protocols",
        "_register_default_transformers",
        "_sanitize_message_payload",
        "_compress_message_payload",
        "_decompress_payload",
        "_get_agents_by_group",
        "_priority_filter",
        "_agent_availability_filter",
        "_message_size_filter"
      ],
      "function_count": 12,
      "async_functions": [
        "start",
        "_execute_task_impl",
        "_send_message_task",
        "_broadcast_message_task",
        "_multicast_message_task",
        "_request_response_task",
        "_publish_event_task",
        "_process_and_route_message",
        "_send_to_agent",
        "_message_delivery_loop"
      ],
      "async_function_count": 20,
      "has_base_agent": true,
      "async_methods": 20,
      "lines": 921,
      "imports": [
        "asyncio",
        "json",
        "time",
        "re",
        "hashlib",
        "zlib",
        "ast",
        "traceback",
        "os",
        "typing",
        "dataclasses",
        "enum",
        "collections",
        "uuid",
        "base_agent"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./validation_agent_complete.py",
      "classes": [
        "ValidationLevel",
        "Severity",
        "ValidationRule",
        "ValidationIssue",
        "ValidationReport",
        "ValidationAgent"
      ],
      "class_count": 6,
      "functions": [
        "to_dict",
        "to_dict",
        "to_dict",
        "__init__",
        "_load_builtin_rules",
        "_validate_schema_rule",
        "_validate_business_rule",
        "_validate_compliance_rule",
        "_validate_security_rule",
        "_determine_overall_result"
      ],
      "function_count": 14,
      "async_functions": [
        "_setup_subscriptions",
        "_start_background_tasks",
        "_handle_task",
        "_validate_data",
        "_apply_rule",
        "_persist_report",
        "_validate_schema",
        "_validate_business_rules",
        "_compliance_check",
        "_create_rule"
      ],
      "async_function_count": 18,
      "has_base_agent": true,
      "async_methods": 18,
      "lines": 860,
      "imports": [
        "asyncio",
        "json",
        "time",
        "re",
        "uuid",
        "hashlib",
        "typing",
        "dataclasses",
        "enum",
        "datetime",
        "collections",
        "base_agent",
        "os"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./base_agent.py",
      "classes": [
        "AgentStatus",
        "TaskStatus",
        "Priority",
        "AgentConfig",
        "TaskRequest",
        "TaskResponse",
        "HealthStatus",
        "CircuitBreakerState",
        "CircuitBreaker",
        "BaseAgent",
        "MySimpleAgent"
      ],
      "class_count": 11,
      "functions": [
        "__init__",
        "__init__",
        "_setup_observability",
        "_setup_signal_handlers",
        "get_circuit_breaker",
        "_get_agent_metrics",
        "shutdown",
        "signal_handler",
        "__init__",
        "_get_agent_metrics"
      ],
      "function_count": 10,
      "async_functions": [
        "call",
        "connect",
        "_setup_streams",
        "_register_with_consul",
        "_nats_error_cb",
        "_nats_disconnected_cb",
        "_nats_reconnected_cb",
        "_rate_limit",
        "_subscribe",
        "_publish"
      ],
      "async_function_count": 25,
      "has_base_agent": true,
      "async_methods": 25,
      "lines": 862,
      "imports": [
        "abc",
        "asyncio",
        "logging",
        "json",
        "uuid",
        "time",
        "signal",
        "sys",
        "contextlib",
        "dataclasses",
        "typing",
        "enum",
        "traceback",
        "nats",
        "nats.aio.client"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": true,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./validation_agent.py",
      "classes": [
        "ValidationLevel",
        "ValidationResult",
        "ValidationRule",
        "ValidationIssue",
        "ValidationReport",
        "ValidationAgent"
      ],
      "class_count": 6,
      "functions": [
        "__init__",
        "_load_predefined_rules",
        "_load_gdpr_rules",
        "_load_pci_dss_rules",
        "_load_hipaa_rules",
        "_load_sox_rules",
        "_determine_overall_result"
      ],
      "function_count": 7,
      "async_functions": [
        "start",
        "_handle_validation_task",
        "_execute_task_impl",
        "_validate_data",
        "_apply_validation_rule",
        "_persist_validation_report",
        "_rule_cache_refresh",
        "_performance_monitor",
        "_handle_schema_registration",
        "_handle_rule_update"
      ],
      "async_function_count": 18,
      "has_base_agent": true,
      "async_methods": 18,
      "lines": 609,
      "imports": [
        "asyncio",
        "json",
        "time",
        "typing",
        "dataclasses",
        "enum",
        "re",
        "jsonschema",
        "jsonschema",
        "pydantic",
        "pydantic",
        "sqlalchemy",
        "sqlalchemy.dialects",
        "hashlib",
        "uuid"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": true,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./prod_communication_agent.py",
      "classes": [
        "MessageType",
        "MessagePriority",
        "DeliveryMode",
        "MessageStatus",
        "Message",
        "MessageRoute",
        "ConversationContext",
        "CommunicationAgent"
      ],
      "class_count": 8,
      "functions": [
        "__post_init__",
        "is_expired",
        "should_retry",
        "size_bytes",
        "matches",
        "is_active",
        "add_message",
        "__init__",
        "_load_communication_protocols",
        "_register_default_transformers"
      ],
      "function_count": 27,
      "async_functions": [
        "start",
        "_execute_task_impl",
        "_send_message_task",
        "_broadcast_message_task",
        "_multicast_message_task",
        "_request_response_task",
        "_publish_event_task",
        "_get_message_status",
        "_cancel_message",
        "_get_agent_status"
      ],
      "async_function_count": 32,
      "has_base_agent": true,
      "async_methods": 32,
      "lines": 2010,
      "imports": [
        "asyncio",
        "json",
        "time",
        "re",
        "hashlib",
        "zlib",
        "traceback",
        "os",
        "typing",
        "dataclasses",
        "enum",
        "collections",
        "uuid",
        "datetime",
        "base_agent"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": true,
      "status": "analyzed"
    },
    {
      "file": "./metrics_agent_production.py",
      "classes": [
        "MetricDataPoint",
        "MetricSummary",
        "MetricsAgent"
      ],
      "class_count": 3,
      "functions": [
        "to_dict",
        "to_dict",
        "__init__"
      ],
      "function_count": 3,
      "async_functions": [
        "_setup_subscriptions",
        "_start_background_tasks",
        "_handle_task",
        "_handle_metrics_data",
        "_handle_system_metrics",
        "_handle_performance_metrics",
        "_handle_heartbeat_metrics",
        "_process_metric",
        "_batch_write_worker",
        "_flush_write_queue"
      ],
      "async_function_count": 24,
      "has_base_agent": true,
      "async_methods": 24,
      "lines": 748,
      "imports": [
        "asyncio",
        "json",
        "time",
        "os",
        "typing",
        "collections",
        "datetime",
        "dataclasses",
        "statistics",
        "base_agent"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./main_project_agent_reference.py",
      "classes": [
        "HealthResponse",
        "SubmitOutputRequest",
        "SubmissionResponse",
        "ProjectStatusResponse",
        "ChatMessage",
        "ChatResponse",
        "ConnectionManager"
      ],
      "class_count": 7,
      "functions": [
        "__init__",
        "disconnect"
      ],
      "function_count": 2,
      "async_functions": [
        "lifespan",
        "get_current_user",
        "require_admin",
        "health_check",
        "detailed_health_check",
        "get_prometheus_metrics",
        "login",
        "logout",
        "submit_agent_output",
        "get_submission_status"
      ],
      "async_function_count": 25,
      "has_base_agent": false,
      "async_methods": 25,
      "lines": 940,
      "imports": [
        "asyncio",
        "logging",
        "datetime",
        "typing",
        "uuid",
        "pathlib",
        "json",
        "hashlib",
        "fastapi",
        "fastapi.middleware.cors",
        "fastapi.middleware.trustedhost",
        "fastapi.security",
        "fastapi.responses",
        "contextlib",
        "pydantic"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": true,
      "has_file_ops": true,
      "status": "analyzed"
    },
    {
      "file": "./static_analysis_agent.py",
      "classes": [
        "AnalysisType",
        "Severity",
        "Finding",
        "AnalysisResult",
        "StaticAnalysisRule",
        "StaticAnalysisAgent"
      ],
      "class_count": 6,
      "functions": [
        "__init__",
        "_init_bandit",
        "_init_semgrep",
        "_init_custom_security",
        "_init_pylint",
        "_init_flake8",
        "_init_mypy",
        "_init_radon",
        "_load_default_rules",
        "_calculate_security_metrics"
      ],
      "function_count": 16,
      "async_functions": [
        "start",
        "_load_rules_from_db",
        "_execute_task_impl",
        "_analyze_code",
        "_run_security_analysis",
        "_run_quality_analysis",
        "_run_performance_analysis",
        "_run_architecture_analysis",
        "_run_compliance_check",
        "_vulnerability_scan"
      ],
      "async_function_count": 21,
      "has_base_agent": true,
      "async_methods": 21,
      "lines": 778,
      "imports": [
        "asyncio",
        "json",
        "time",
        "ast",
        "re",
        "os",
        "typing",
        "dataclasses",
        "enum",
        "uuid",
        "pathlib",
        "datetime",
        "base_agent",
        "opentelemetry"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./real_time_monitoring_agent.py",
      "classes": [
        "MetricType",
        "AlertSeverity",
        "AlertStatus",
        "Metric",
        "Alert",
        "AlertRule",
        "RealTimeMonitoringAgent"
      ],
      "class_count": 7,
      "functions": [
        "__init__",
        "_setup_default_alert_rules",
        "_setup_system_collectors",
        "_store_metric"
      ],
      "function_count": 4,
      "async_functions": [
        "start",
        "_execute_task_impl",
        "_collect_system_metrics",
        "_collect_cpu_metrics",
        "_collect_memory_metrics",
        "_collect_disk_metrics",
        "_collect_network_metrics",
        "_collect_process_metrics",
        "_process_alert_rules",
        "_evaluate_alert_rule"
      ],
      "async_function_count": 34,
      "has_base_agent": true,
      "async_methods": 34,
      "lines": 1363,
      "imports": [
        "asyncio",
        "json",
        "time",
        "typing",
        "dataclasses",
        "enum",
        "uuid",
        "collections",
        "psutil",
        "aiohttp",
        "logging",
        "statistics",
        "datetime",
        "base_agent",
        "opentelemetry"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": true,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./shared/communication/agent_communicator.py",
      "classes": [
        "AgentCommunicator"
      ],
      "class_count": 1,
      "functions": [
        "__init__"
      ],
      "function_count": 1,
      "async_functions": [
        "send_message",
        "broadcast",
        "register_agent",
        "unregister_agent"
      ],
      "async_function_count": 4,
      "has_base_agent": false,
      "async_methods": 4,
      "lines": 28,
      "imports": [],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./agent_management_api.py",
      "classes": [
        "AgentStatus",
        "AgentType",
        "AgentCapability",
        "AgentCreateRequest",
        "AgentUpdateRequest",
        "AgentResponse",
        "AgentListResponse",
        "AgentPerformanceMetrics",
        "TaskAssignmentRequest",
        "AgentManagementService"
      ],
      "class_count": 10,
      "functions": [
        "name_must_be_alphanumeric",
        "__init__"
      ],
      "function_count": 2,
      "async_functions": [
        "get_agent_service",
        "create_agent",
        "get_agent",
        "list_agents",
        "update_agent",
        "delete_agent",
        "get_agent_performance",
        "assign_task_to_agent",
        "start_agent",
        "stop_agent"
      ],
      "async_function_count": 24,
      "has_base_agent": false,
      "async_methods": 24,
      "lines": 616,
      "imports": [
        "fastapi",
        "fastapi.responses",
        "sqlalchemy.ext.asyncio",
        "sqlalchemy",
        "sqlalchemy.orm",
        "typing",
        "datetime",
        "asyncio",
        "json",
        "uuid",
        "enum",
        "pydantic",
        "structlog",
        "main",
        "main"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": true,
      "has_api": true,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./learning_agent_core.py",
      "classes": [
        "AgentRole",
        "KnowledgeType",
        "LearningSource",
        "KnowledgeQuality",
        "KnowledgeItem",
        "LearningEvent",
        "AgentLearningProfile",
        "KnowledgeFlow",
        "YMERALearningAgent"
      ],
      "class_count": 9,
      "functions": [
        "__init__",
        "_start_background_tasks",
        "_calculate_knowledge_priority",
        "_extract_query_terms"
      ],
      "function_count": 4,
      "async_functions": [
        "initialize",
        "_load_knowledge_base",
        "_load_agent_profiles",
        "_build_knowledge_graph",
        "_initialize_pattern_recognition",
        "capture_knowledge_from_event",
        "_extract_knowledge",
        "_extract_code_knowledge",
        "_extract_feedback_knowledge",
        "_extract_test_knowledge"
      ],
      "async_function_count": 48,
      "has_base_agent": false,
      "async_methods": 48,
      "lines": 1742,
      "imports": [
        "asyncio",
        "logging",
        "json",
        "uuid",
        "datetime",
        "typing",
        "dataclasses",
        "enum",
        "collections",
        "hashlib",
        "re",
        "structlog",
        "sqlalchemy",
        "sqlalchemy.ext.asyncio"
      ],
      "has_async_init": true,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": true,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./agent.py",
      "classes": [
        "YmeraAgent"
      ],
      "class_count": 1,
      "functions": [
        "__init__"
      ],
      "function_count": 1,
      "async_functions": [
        "initialize",
        "process_message",
        "provide_feedback",
        "_store_experience",
        "_get_conversation_history",
        "get_user_conversations",
        "_experience_processing_loop",
        "_get_unprocessed_experiences",
        "_mark_experiences_processed",
        "_trigger_learning_update"
      ],
      "async_function_count": 15,
      "has_base_agent": false,
      "async_methods": 15,
      "lines": 300,
      "imports": [
        "asyncio",
        "typing",
        "datetime",
        "json",
        "logging",
        "uuid",
        "database",
        "models",
        "ml_pipeline",
        "knowledge_manager"
      ],
      "has_async_init": true,
      "has_process_method": true,
      "has_cleanup": false,
      "has_database": true,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./learning-agent-production.py",
      "classes": [
        "Settings",
        "AgentState",
        "UltraAdvancedLearningAgent"
      ],
      "class_count": 3,
      "functions": [
        "get_settings",
        "retry_on_failure",
        "cache_result",
        "run_migrations_offline",
        "run_migrations_online",
        "__init__",
        "_merge_config",
        "_initialize_components",
        "_start_background_tasks",
        "_calculate_success_rate"
      ],
      "function_count": 15,
      "async_functions": [
        "initialize",
        "_load_production_models",
        "process_experience",
        "_extract_knowledge",
        "_extract_entities",
        "_extract_concepts",
        "_generate_embedding",
        "_store_knowledge",
        "_update_knowledge_graph",
        "_find_similar_knowledge"
      ],
      "async_function_count": 45,
      "has_base_agent": false,
      "async_methods": 45,
      "lines": 1002,
      "imports": [
        "os",
        "typing",
        "pydantic_settings",
        "pydantic",
        "functools",
        "secrets",
        "asyncio",
        "uuid",
        "time",
        "logging",
        "datetime",
        "typing",
        "dataclasses",
        "contextlib",
        "json"
      ],
      "has_async_init": true,
      "has_process_method": true,
      "has_cleanup": false,
      "has_database": true,
      "has_api": true,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./agent_manager_enhancements.py",
      "classes": [
        "AgentReportStatus",
        "AgentAction",
        "AdminApproval",
        "MandatoryReportingEnforcer",
        "AgentLifecycleManager",
        "EnhancedSecurityMonitor",
        "DataFlowValidator",
        "EnhancedAuditSystem"
      ],
      "class_count": 8,
      "functions": [
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "_load_validation_rules",
        "_validate_pattern",
        "_detect_sensitive_data",
        "_is_sensitive_data_allowed",
        "_contains_executable_code",
        "__init__"
      ],
      "function_count": 10,
      "async_functions": [
        "start_monitoring",
        "_check_all_agents",
        "_enforce_reporting_compliance",
        "_warn_agent",
        "_suspend_agent",
        "_handle_non_compliant_agent",
        "process_agent_report",
        "_request_unsuspend_agent",
        "request_agent_action",
        "_validate_action_request"
      ],
      "async_function_count": 23,
      "has_base_agent": false,
      "async_methods": 23,
      "lines": 1013,
      "imports": [
        "asyncio",
        "logging",
        "datetime",
        "typing",
        "enum",
        "uuid",
        "re",
        "re",
        "re"
      ],
      "has_async_init": false,
      "has_process_method": true,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./generate_agent_reports.py",
      "classes": [
        "AgentReportGenerator"
      ],
      "class_count": 1,
      "functions": [
        "main",
        "__init__",
        "_load_json",
        "generate_all_reports",
        "_generate_inventory_report",
        "_generate_coverage_report",
        "_generate_testing_report",
        "_generate_performance_report",
        "_generate_architecture_report",
        "_generate_integration_report"
      ],
      "function_count": 11,
      "async_functions": [],
      "async_function_count": 0,
      "has_base_agent": false,
      "async_methods": 0,
      "lines": 677,
      "imports": [
        "json",
        "sys",
        "datetime",
        "pathlib",
        "typing",
        "collections"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": true,
      "status": "analyzed"
    },
    {
      "file": "./agent_system.py",
      "classes": [
        "AgentStatus",
        "TaskStatus",
        "TaskPriority",
        "User",
        "Agent",
        "Task",
        "UserCreate",
        "UserResponse",
        "AgentCreate",
        "AgentResponse",
        "TaskCreate",
        "TaskResponse",
        "DatabaseManager",
        "AuthService",
        "TaskQueue",
        "AgentManager"
      ],
      "class_count": 16,
      "functions": [
        "__init__",
        "__init__",
        "hash_password",
        "verify_password",
        "create_access_token",
        "__init__",
        "__init__"
      ],
      "function_count": 7,
      "async_functions": [
        "lifespan",
        "get_current_user",
        "register",
        "login",
        "get_current_user_info",
        "create_agent",
        "list_agents",
        "get_agent",
        "agent_heartbeat",
        "create_task"
      ],
      "async_function_count": 24,
      "has_base_agent": false,
      "async_methods": 24,
      "lines": 659,
      "imports": [
        "fastapi",
        "fastapi.middleware.cors",
        "fastapi.security",
        "fastapi.responses",
        "sqlalchemy.ext.asyncio",
        "sqlalchemy",
        "sqlalchemy.orm",
        "contextlib",
        "datetime",
        "typing",
        "pydantic",
        "enum",
        "asyncio",
        "logging",
        "os"
      ],
      "has_async_init": false,
      "has_process_method": true,
      "has_cleanup": false,
      "has_database": true,
      "has_api": true,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./agent_coordinator.py",
      "classes": [
        "ActionType",
        "Priority",
        "WorkflowStatus",
        "UserRequest",
        "AgentTask",
        "WorkflowPlan",
        "AgentCoordinator",
        "CoordinatorAPI"
      ],
      "class_count": 8,
      "functions": [
        "validate_files",
        "__init__",
        "_get_agent_for_action",
        "_estimate_duration",
        "_priority_to_int",
        "__init__"
      ],
      "function_count": 6,
      "async_functions": [
        "example_usage",
        "process_user_request",
        "_analyze_intent",
        "_recommend_actions",
        "_create_workflow_plan",
        "_find_available_agent",
        "_execute_workflow",
        "_execute_task",
        "_wait_for_dependencies",
        "_wait_for_task_completion"
      ],
      "async_function_count": 19,
      "has_base_agent": false,
      "async_methods": 19,
      "lines": 931,
      "imports": [
        "asyncio",
        "uuid",
        "typing",
        "datetime",
        "enum",
        "json",
        "structlog",
        "pydantic",
        "sqlalchemy",
        "sqlalchemy.ext.asyncio",
        "time",
        "datetime"
      ],
      "has_async_init": false,
      "has_process_method": true,
      "has_cleanup": false,
      "has_database": true,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./agent_discovery_complete.py",
      "classes": [
        "AgentDiscoverySystem"
      ],
      "class_count": 1,
      "functions": [
        "main",
        "__init__",
        "discover_all_agents",
        "_should_skip_file",
        "_analyze_file",
        "_extract_class_info",
        "_get_base_name",
        "_is_agent_class",
        "_generate_summary"
      ],
      "function_count": 9,
      "async_functions": [],
      "async_function_count": 0,
      "has_base_agent": false,
      "async_methods": 0,
      "lines": 326,
      "imports": [
        "ast",
        "json",
        "os",
        "sys",
        "time",
        "traceback",
        "pathlib",
        "typing",
        "datetime",
        "collections"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": true,
      "status": "analyzed"
    },
    {
      "file": "./agent_test_runner_complete.py",
      "classes": [
        "AgentTestRunner"
      ],
      "class_count": 1,
      "functions": [
        "clean_for_json",
        "main",
        "__init__",
        "load_catalog",
        "run_all_tests",
        "_test_agent_file",
        "_test_import",
        "_test_class_instantiation",
        "_test_methods",
        "_generate_test_summary"
      ],
      "function_count": 10,
      "async_functions": [],
      "async_function_count": 0,
      "has_base_agent": false,
      "async_methods": 0,
      "lines": 395,
      "imports": [
        "ast",
        "importlib.util",
        "inspect",
        "json",
        "sys",
        "time",
        "traceback",
        "asyncio",
        "pathlib",
        "typing",
        "datetime",
        "collections"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": true,
      "status": "analyzed"
    },
    {
      "file": "./editing_agent_testing (1).py",
      "classes": [
        "TestEditingAgentLifecycle",
        "TestEditingSession",
        "TestContentAnalysis",
        "TestSuggestions",
        "TestGrammarCheck",
        "TestCollaborativeEditing",
        "TestVersionControl",
        "TestTaskHandling",
        "TestMetrics",
        "TestIntegration"
      ],
      "class_count": 10,
      "functions": [
        "editing_agent_config"
      ],
      "function_count": 1,
      "async_functions": [
        "mock_connections",
        "editing_agent",
        "test_agent_initialization",
        "test_graceful_shutdown",
        "test_start_editing_session",
        "test_get_session_status",
        "test_close_session",
        "test_analyze_content_basic",
        "test_analyze_empty_content",
        "test_tone_analysis"
      ],
      "async_function_count": 26,
      "has_base_agent": false,
      "async_methods": 26,
      "lines": 680,
      "imports": [
        "pytest",
        "asyncio",
        "json",
        "uuid",
        "unittest.mock",
        "typing",
        "editing_agent",
        "base_agent"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./test_agents_for_benchmark.py",
      "classes": [
        "SimpleTestAgent",
        "FastTestAgent",
        "SlowTestAgent"
      ],
      "class_count": 3,
      "functions": [
        "__init__",
        "simple_method",
        "compute_heavy",
        "memory_operation",
        "__init__",
        "quick_increment",
        "quick_check",
        "__init__",
        "slow_operation"
      ],
      "function_count": 9,
      "async_functions": [],
      "async_function_count": 0,
      "has_base_agent": false,
      "async_methods": 0,
      "lines": 60,
      "imports": [
        "time"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./metrics_agent.py",
      "classes": [
        "MetricsAgent"
      ],
      "class_count": 1,
      "functions": [
        "__init__",
        "_generate_summary_metrics"
      ],
      "function_count": 2,
      "async_functions": [
        "start",
        "_execute_task_impl",
        "_handle_metrics_data",
        "_summarize_metrics_periodically"
      ],
      "async_function_count": 4,
      "has_base_agent": true,
      "async_methods": 4,
      "lines": 126,
      "imports": [
        "asyncio",
        "json",
        "time",
        "os",
        "typing",
        "collections",
        "base_agent"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./enhanced_agent_surveillance.py",
      "classes": [
        "BehaviorPattern",
        "AgentThreatIndicator",
        "ConversationContext",
        "AgentSurveillanceSystem"
      ],
      "class_count": 4,
      "functions": [
        "__init__",
        "_initialize_threat_rules"
      ],
      "function_count": 2,
      "async_functions": [
        "start_monitoring",
        "_monitor_agent_behavior",
        "_analyze_agent_behavior",
        "_create_behavior_pattern",
        "_learn_baseline",
        "_detect_anomaly",
        "_ai_anomaly_detection",
        "_check_threat_indicators",
        "_handle_anomalous_behavior",
        "_handle_threats"
      ],
      "async_function_count": 20,
      "has_base_agent": false,
      "async_methods": 20,
      "lines": 698,
      "imports": [
        "asyncio",
        "logging",
        "datetime",
        "typing",
        "collections",
        "dataclasses",
        "numpy",
        "sqlalchemy",
        "sqlalchemy.ext.asyncio",
        "config",
        "database.secure_database_manager",
        "models.secure_models",
        "monitoring.alert_manager",
        "ai.multi_modal_ai",
        "json"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": true,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./enhancement_agent.py",
      "classes": [
        "EnhancementType",
        "EnhancementLevel",
        "Enhancement",
        "EnhancementResult",
        "EnhancementAgent"
      ],
      "class_count": 5,
      "functions": [
        "__init__",
        "_load_grammar_patterns",
        "_initialize_style_analyzers",
        "_setup_readability_metrics",
        "_load_vocabulary_tools",
        "_create_enhancement_pipeline",
        "_intensify_adjective",
        "_calculate_improvement_score",
        "_update_enhancement_stats",
        "_get_agent_metrics"
      ],
      "function_count": 10,
      "async_functions": [
        "start",
        "_execute_task_impl",
        "_enhance_content",
        "_apply_grammar_enhancement",
        "_apply_clarity_enhancement",
        "_apply_vocabulary_enhancement",
        "_apply_structure_enhancement",
        "_apply_style_enhancement",
        "_apply_readability_enhancement",
        "_apply_tone_enhancement"
      ],
      "async_function_count": 27,
      "has_base_agent": true,
      "async_methods": 27,
      "lines": 889,
      "imports": [
        "asyncio",
        "json",
        "time",
        "re",
        "difflib",
        "numpy",
        "traceback",
        "os",
        "typing",
        "dataclasses",
        "enum",
        "collections",
        "base_agent",
        "opentelemetry"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./validate_agent_system_completion.py",
      "classes": [
        "AgentSystemCompletionValidator"
      ],
      "class_count": 1,
      "functions": [
        "main",
        "__init__",
        "validate",
        "validate_json_files",
        "validate_markdown_reports",
        "validate_success_criteria",
        "validate_data_quality",
        "calculate_overall_status",
        "print_summary",
        "_check_json_file"
      ],
      "function_count": 22,
      "async_functions": [],
      "async_function_count": 0,
      "has_base_agent": false,
      "async_methods": 0,
      "lines": 556,
      "imports": [
        "json",
        "os",
        "datetime",
        "pathlib",
        "typing"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": true,
      "status": "analyzed"
    },
    {
      "file": "./learning_agent_api_integration.py",
      "classes": [
        "CodeAnalysisRequest",
        "TaskOutcomeRequest",
        "UserFeedbackRequest",
        "KnowledgeQueryRequest",
        "CollaborationRequest",
        "KnowledgeApplicationFeedback",
        "AgentRegistrationRequest",
        "ManagerAgentInterface"
      ],
      "class_count": 8,
      "functions": [
        "__init__"
      ],
      "function_count": 1,
      "async_functions": [
        "startup",
        "shutdown",
        "health_check",
        "get_status",
        "capture_code_analysis",
        "capture_task_outcome",
        "capture_user_feedback",
        "capture_error_resolution",
        "query_knowledge",
        "find_similar_solutions"
      ],
      "async_function_count": 32,
      "has_base_agent": false,
      "async_methods": 32,
      "lines": 1002,
      "imports": [
        "fastapi",
        "fastapi.responses",
        "pydantic",
        "typing",
        "datetime",
        "asyncio",
        "json",
        "learning_agent_core",
        "uuid",
        "learning_agent_database",
        "learning_agent_core",
        "uvicorn"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": true,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./drafting_agent.py",
      "classes": [
        "DocumentType",
        "ContentTone",
        "DraftStatus",
        "ContentTemplate",
        "DocumentDraft",
        "ContentAnalysis",
        "DraftingAgent"
      ],
      "class_count": 7,
      "functions": [
        "__init__",
        "_load_default_templates",
        "_load_style_guides",
        "_generate_template_content"
      ],
      "function_count": 4,
      "async_functions": [
        "start",
        "_initialize_nlp",
        "_execute_task_impl",
        "_create_draft",
        "_update_draft",
        "_generate_content",
        "_analyze_content",
        "_analyze_tone_llm",
        "_apply_template",
        "_start_collaboration"
      ],
      "async_function_count": 11,
      "has_base_agent": true,
      "async_methods": 11,
      "lines": 711,
      "imports": [
        "asyncio",
        "json",
        "time",
        "re",
        "uuid",
        "difflib",
        "traceback",
        "os",
        "typing",
        "dataclasses",
        "enum",
        "datetime",
        "nltk",
        "nltk.tokenize",
        "nltk.corpus"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./editing_agent.py",
      "classes": [
        "EditType",
        "ContentType",
        "EditingMode",
        "EditSuggestion",
        "EditingSession",
        "ContentAnalysis",
        "EditingAgent"
      ],
      "class_count": 7,
      "functions": [
        "__init__",
        "_load_ap_style",
        "_load_chicago_style",
        "_load_mla_style",
        "_load_apa_style",
        "_load_technical_style",
        "_load_email_patterns",
        "_load_proposal_patterns",
        "_load_report_patterns",
        "_load_marketing_patterns"
      ],
      "function_count": 12,
      "async_functions": [
        "_initialize_tools",
        "start",
        "_execute_task_impl",
        "_start_editing_session",
        "_analyze_content",
        "_analyze_tone",
        "_analyze_content_specific",
        "_generate_suggestions",
        "_apply_edits",
        "_check_grammar"
      ],
      "async_function_count": 19,
      "has_base_agent": true,
      "async_methods": 19,
      "lines": 876,
      "imports": [
        "asyncio",
        "json",
        "time",
        "re",
        "os",
        "typing",
        "dataclasses",
        "enum",
        "uuid",
        "difflib",
        "datetime",
        "spacy",
        "nltk",
        "nltk.sentiment",
        "textstat"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./enhancement_agent_v3.py",
      "classes": [
        "EnhancementType",
        "EnhancementLevel",
        "FeedbackType",
        "Enhancement",
        "EnhancementResult",
        "LRUCache",
        "EnhancementAgent"
      ],
      "class_count": 7,
      "functions": [
        "__post_init__",
        "to_dict",
        "to_dict",
        "__init__",
        "__init__",
        "_load_grammar_patterns",
        "_initialize_style_analyzers",
        "_setup_readability_metrics",
        "_load_vocabulary_tools",
        "_validate_content"
      ],
      "function_count": 18,
      "async_functions": [
        "main",
        "get",
        "set",
        "clear",
        "size",
        "cleanup_expired",
        "_initialize_database",
        "_initialize",
        "_setup_subscriptions",
        "_start_background_tasks"
      ],
      "async_function_count": 56,
      "has_base_agent": true,
      "async_methods": 56,
      "lines": 2159,
      "imports": [
        "asyncio",
        "json",
        "time",
        "re",
        "uuid",
        "traceback",
        "os",
        "hashlib",
        "typing",
        "dataclasses",
        "enum",
        "collections",
        "datetime",
        "enhanced_base_agent",
        "sys"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": true,
      "has_database": false,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./agent_routes.py",
      "classes": [],
      "class_count": 0,
      "functions": [],
      "function_count": 0,
      "async_functions": [
        "create_agent",
        "list_agents",
        "get_agent",
        "update_agent",
        "request_agent_action",
        "submit_agent_report",
        "agent_websocket"
      ],
      "async_function_count": 7,
      "has_base_agent": false,
      "async_methods": 7,
      "lines": 211,
      "imports": [
        "fastapi",
        "fastapi",
        "typing",
        "datetime",
        "uuid",
        "json",
        "models",
        "services"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": true,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./enhanced_base_agent (1).py",
      "classes": [
        "Priority",
        "AgentState",
        "ConnectionState",
        "CircuitBreakerState",
        "AgentConfig",
        "TaskRequest",
        "AgentMetrics",
        "CircuitBreaker",
        "BaseAgent",
        "ContextFilter",
        "JsonFormatter"
      ],
      "class_count": 11,
      "functions": [
        "validate",
        "to_dict",
        "from_dict",
        "is_expired",
        "should_retry",
        "to_dict",
        "__init__",
        "get_state",
        "get_stats",
        "__init__"
      ],
      "function_count": 18,
      "async_functions": [
        "run_agent",
        "call",
        "_on_success",
        "_on_failure",
        "reset",
        "start",
        "_connect_nats",
        "_connect_postgres",
        "_connect_redis",
        "_initialize_database"
      ],
      "async_function_count": 48,
      "has_base_agent": true,
      "async_methods": 48,
      "lines": 1431,
      "imports": [
        "asyncio",
        "json",
        "time",
        "signal",
        "sys",
        "uuid",
        "typing",
        "enum",
        "dataclasses",
        "datetime",
        "contextlib",
        "logging",
        "logging.handlers",
        "functools",
        "random"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": true,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./enhanced_llm_agent.py",
      "classes": [
        "LLMProvider",
        "MessageRole",
        "ConversationMessage",
        "ConversationMemory",
        "RAGDocument",
        "LLMConfig",
        "BaseLLMProvider",
        "OpenAIProvider",
        "AnthropicProvider",
        "LLMProviderManager",
        "LLMAgent"
      ],
      "class_count": 11,
      "functions": [
        "to_dict",
        "add_message",
        "get_context_messages",
        "get_token_count",
        "__init__",
        "__init__",
        "get_provider",
        "__init__",
        "_calculate_cost",
        "_update_model_metrics"
      ],
      "function_count": 11,
      "async_functions": [
        "initialize",
        "generate",
        "close",
        "initialize",
        "generate",
        "close",
        "initialize",
        "generate",
        "close",
        "register_provider"
      ],
      "async_function_count": 40,
      "has_base_agent": true,
      "async_methods": 40,
      "lines": 1666,
      "imports": [
        "asyncio",
        "json",
        "time",
        "uuid",
        "os",
        "typing",
        "dataclasses",
        "enum",
        "collections",
        "abc",
        "enhanced_base_agent",
        "openai",
        "anthropic",
        "qdrant_client",
        "qdrant_client.http.models"
      ],
      "has_async_init": true,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./learning_agent_api.py",
      "classes": [
        "KnowledgeStoreRequest",
        "KnowledgeSearchRequest",
        "LearningOutcomeRequest",
        "UserFeedbackRequest",
        "InteractionLogRequest",
        "KnowledgeSubscriptionRequest",
        "KnowledgeShareRequest",
        "RecommendationRequest"
      ],
      "class_count": 8,
      "functions": [],
      "function_count": 0,
      "async_functions": [
        "get_learning_agent",
        "store_knowledge",
        "search_knowledge",
        "get_knowledge",
        "update_knowledge",
        "delete_knowledge",
        "get_knowledge_by_category",
        "learn_from_outcome",
        "learn_from_feedback",
        "log_interaction"
      ],
      "async_function_count": 31,
      "has_base_agent": false,
      "async_methods": 31,
      "lines": 688,
      "imports": [
        "typing",
        "datetime",
        "fastapi",
        "pydantic",
        "structlog"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": true,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./enhanced_learning_agent.py",
      "classes": [
        "AgentCapability",
        "KnowledgeRequest",
        "ExternalKnowledgeSource",
        "CollectiveKnowledgeLog",
        "EnhancedLearningAgent"
      ],
      "class_count": 5,
      "functions": [
        "__init__",
        "_start_enhanced_background_tasks",
        "_check_permission_required",
        "_normalize_external_response",
        "get_agents_with_capability",
        "_count_agents_by_role",
        "_count_knowledge_by_type",
        "_create_knowledge_catalog",
        "_summarize_knowledge_quality"
      ],
      "function_count": 9,
      "async_functions": [
        "initialize",
        "_load_agent_capabilities",
        "_initialize_external_sources",
        "_register_with_communication_manager",
        "handle_knowledge_request",
        "_search_internal_knowledge",
        "_request_manager_approval",
        "_request_external_access_approval",
        "_query_external_sources",
        "_query_external_api"
      ],
      "async_function_count": 33,
      "has_base_agent": false,
      "async_methods": 33,
      "lines": 1557,
      "imports": [
        "asyncio",
        "logging",
        "json",
        "uuid",
        "datetime",
        "typing",
        "dataclasses",
        "enum",
        "collections",
        "hashlib",
        "structlog",
        "httpx",
        "websockets",
        "sqlalchemy",
        "learning_agent_core"
      ],
      "has_async_init": true,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": true,
      "has_api": true,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./enhanced_agent_orchestrator.py",
      "classes": [
        "TaskPriority",
        "AgentCapability",
        "AgentPerformanceLevel",
        "AgentProfile",
        "TaskRequirement",
        "TaskAssignment",
        "IntelligentAgentOrchestrator"
      ],
      "class_count": 7,
      "functions": [
        "__init__",
        "_load_or_create_model",
        "_save_model",
        "update_agent_profile",
        "_update_agent_clusters",
        "_create_agent_feature_vector",
        "_find_candidate_agents",
        "_check_resource_availability",
        "_create_task_agent_features",
        "_calculate_cost_score"
      ],
      "function_count": 24,
      "async_functions": [
        "assign_task",
        "_score_agents_for_task",
        "_calculate_performance_score",
        "_predict_task_success",
        "_predict_completion_time",
        "record_task_completion",
        "_check_retrain_models",
        "_retrain_models",
        "intelligent_load_balancing",
        "_create_rebalancing_plan"
      ],
      "async_function_count": 18,
      "has_base_agent": false,
      "async_methods": 18,
      "lines": 1111,
      "imports": [
        "logging",
        "asyncio",
        "datetime",
        "typing",
        "enum",
        "dataclasses",
        "numpy",
        "json",
        "collections",
        "sklearn.ensemble",
        "sklearn.preprocessing",
        "sklearn.cluster",
        "joblib",
        "os",
        "config"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./agent_registry.py",
      "classes": [
        "AgentStatus",
        "AgentRecord",
        "AgentRegistry"
      ],
      "class_count": 3,
      "functions": [
        "to_dict",
        "is_healthy",
        "is_available",
        "__init__"
      ],
      "function_count": 4,
      "async_functions": [
        "start",
        "stop",
        "register_agent",
        "deregister_agent",
        "_update_agent",
        "heartbeat",
        "update_health",
        "record_failure",
        "get_agent",
        "get_agents_by_type"
      ],
      "async_function_count": 19,
      "has_base_agent": false,
      "async_methods": 19,
      "lines": 474,
      "imports": [
        "asyncio",
        "time",
        "datetime",
        "typing",
        "dataclasses",
        "enum",
        "structlog"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./agent_client.py",
      "classes": [
        "AgentStatus",
        "AgentClient"
      ],
      "class_count": 2,
      "functions": [
        "__init__",
        "_create_ssl_context",
        "register_capability",
        "_get_process_uptime"
      ],
      "function_count": 4,
      "async_functions": [
        "connect",
        "_verify_api_connection",
        "_websocket_handler",
        "_handle_ws_message",
        "_heartbeat_sender",
        "_status_reporter",
        "_task_processor",
        "_send_task_result",
        "_send_task_error",
        "report_error"
      ],
      "async_function_count": 12,
      "has_base_agent": false,
      "async_methods": 12,
      "lines": 426,
      "imports": [
        "asyncio",
        "logging",
        "json",
        "uuid",
        "platform",
        "psutil",
        "socket",
        "ssl",
        "os",
        "datetime",
        "typing",
        "aiohttp",
        "enum"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": true,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./agent_classifier.py",
      "classes": [],
      "class_count": 0,
      "functions": [
        "classify_agents"
      ],
      "function_count": 1,
      "async_functions": [],
      "async_function_count": 0,
      "has_base_agent": true,
      "async_methods": 0,
      "lines": 213,
      "imports": [
        "json",
        "pathlib",
        "typing"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": false,
      "has_api": false,
      "has_file_ops": true,
      "status": "analyzed"
    },
    {
      "file": "./agent_manager_integrated.py",
      "classes": [
        "AgentStatus",
        "TaskStatus",
        "TaskPriority",
        "User",
        "Agent",
        "AgentReport",
        "Task"
      ],
      "class_count": 7,
      "functions": [],
      "function_count": 0,
      "async_functions": [],
      "async_function_count": 0,
      "has_base_agent": false,
      "async_methods": 0,
      "lines": 217,
      "imports": [
        "asyncio",
        "logging",
        "os",
        "time",
        "uuid",
        "json",
        "hashlib",
        "hmac",
        "typing",
        "datetime",
        "enum",
        "dataclasses",
        "contextlib",
        "functools",
        "fastapi"
      ],
      "has_async_init": false,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": true,
      "has_api": true,
      "has_file_ops": false,
      "status": "analyzed"
    },
    {
      "file": "./agent_orchestrator.py",
      "classes": [
        "AgentOrchestrator"
      ],
      "class_count": 1,
      "functions": [
        "__init__",
        "_register_agents",
        "_check_circuit_breaker",
        "_record_failure",
        "_reset_circuit_breaker"
      ],
      "function_count": 5,
      "async_functions": [
        "initialize",
        "send_to_agent",
        "check_agent_health",
        "list_agents",
        "start_health_monitoring",
        "health_check",
        "shutdown",
        "monitor"
      ],
      "async_function_count": 8,
      "has_base_agent": false,
      "async_methods": 8,
      "lines": 304,
      "imports": [
        "asyncio",
        "httpx",
        "logging",
        "typing",
        "datetime",
        "json",
        "database"
      ],
      "has_async_init": true,
      "has_process_method": false,
      "has_cleanup": false,
      "has_database": true,
      "has_api": true,
      "has_file_ops": false,
      "status": "analyzed"
    }
  ],
  "summary_stats": {
    "analyzed_successfully": 89,
    "analysis_errors": 2,
    "with_base_agent_inheritance": 36,
    "with_async_methods": 77,
    "with_database_integration": 27,
    "with_api_integration": 19,
    "average_lines_per_file": 693
  }
}