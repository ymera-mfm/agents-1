name: Deploy to Production

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

permissions:
  contents: read
  deployments: write

jobs:
  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    environment: 
      name: ${{ github.event.inputs.environment || 'production' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run pre-deployment checks
        run: |
          npm run lint
          npm run test:coverage
          npm run security:scan
        continue-on-error: false
        
      - name: Build production bundle
        run: npm run build:prod
        env:
          CI: true
          NODE_ENV: production
          
      - name: Run deployment verification
        run: bash pre-deploy-check.sh
        
      - name: Deploy to Vercel
        if: success()
        run: npm run deploy:vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          
      - name: Deploy to Netlify
        if: success() && github.event.inputs.environment == 'staging'
        run: npm run deploy:netlify
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          
      - name: Health check
        if: success()
        run: sleep 30 && npm run health:check
        continue-on-error: true
        
      - name: Notify deployment status
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const status = '${{ job.status }}';
            const environment = '${{ github.event.inputs.environment || 'production' }}';
            console.log(`Deployment to ${environment}: ${status}`);

  post-deploy:
    name: Post-Deployment Verification
    runs-on: ubuntu-latest
    needs: deploy
    if: success()
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Run smoke tests
        run: npm run test:smoke:prod
        continue-on-error: true
